Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Accept/ACCEPT.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 AcceptAndDisplay
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 StudentDetails
 .
 02
 StudentId
 PIC
 9(7)
 .
 02
 StudentName
 .
 03
 Surname
 PIC
 X(8)
 .
 03
 Initials
 PIC
 XX
 .
 02
 CourseCode
 PIC
 X(4)
 .
 02
 Gender
 PIC
 X
 .
 01
 CurrentDate
 .
 02
 CurrentYear
 PIC
 9(4)
 .
 02
 CurrentMonth
 PIC
 99
 .
 02
 CurrentDay
 PIC
 99
 .
 01
 DayOfYear
 .
 02
 FILLER
 PIC
 9(4)
 .
 02
 YearDay
 PIC
 9(3)
 .
 01
 CurrentTime
 .
 02
 CurrentHour
 PIC
 99
 .
 02
 CurrentMinute
 PIC
 99
 .
 02
 FILLER
 PIC
 9(4)
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 DISPLAY
 "Enter student details using template below"
 .
 DISPLAY
 "Enter - ID,Surname,Initials,CourseCode,Gender"
 DISPLAY
 "SSSSSSSNNNNNNNNIICCCCG"
 .
 ACCEPT
 StudentDetails
 .
 ACCEPT
 CurrentDate
 FROM
 DATE
 YYYYMMDD
 .
 ACCEPT
 DayOfYear
 FROM
 DAY
 YYYYDDD
 .
 ACCEPT
 CurrentTime
 FROM
 TIME
 .
 DISPLAY
 "Name is "
 Initials
 SPACE
 Surname
 .
 DISPLAY
 "Date is "
 CurrentDay
 SPACE
 CurrentMonth
 SPACE
 CurrentYear
 .
 DISPLAY
 "Today is day "
 YearDay
 " of the year"
 .
 DISPLAY
 "The time is "
 CurrentHour
 ":"
 CurrentMinute
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Accept/MULTIPLIER.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 Multiplier
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 Num1
 PIC
 9
 VALUE
 ZEROS
 .
 01
 Num2
 PIC
 9
 VALUE
 ZEROS
 .
 01
 Result
 PIC
 99
 VALUE
 ZEROS
 .
 PROCEDURE
 DIVISION
 .
 DISPLAY
 "Enter first number  (1 digit) : "
 WITH
 NO
 ADVANCING
 .
 ACCEPT
 Num1
 .
 DISPLAY
 "Enter second number (1 digit) : "
 WITH
 NO
 ADVANCING
 .
 ACCEPT
 Num2
 .
 MULTIPLY
 Num1
 BY
 Num2
 GIVING
 Result
 .
 DISPLAY
 "Result is = "
 Result
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Accept/Shortest.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 ShortestProgram
 .
 PROCEDURE
 DIVISION
 .
 DisplayPrompt
 .
 DISPLAY
 "I did it"
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Conditn/CONDITIONS.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 Conditions
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 Char
 PIC
 X
 .
 88
 Vowel
 VALUE
 "a"
 "e"
 "i"
 "o"
 "u"
 .
 88
 Consonant
 VALUE
 "b"
 "c"
 "d"
 "f"
 "g"
 "h"
 "j"
 THRU
 "n"
 "p"
 THRU
 "t"
 "v"
 THRU
 "z"
 .
 88
 Digit
 VALUE
 "0"
 THRU
 "9"
 .
 88
 ValidCharacter
 VALUE
 "a"
 THRU
 "z"
 "0"
 THRU
 "9"
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 DISPLAY
 "Enter lower case character or digit. No data ends."
 .
 ACCEPT
 Char
 .
 PERFORM
 UNTIL
 NOT
 ValidCharacter
 EVALUATE
 TRUE
 WHEN
 Vowel
 DISPLAY
 "The letter "
 Char
 " is a vowel."
 WHEN
 Consonant
 DISPLAY
 "The letter "
 Char
 " is a consonant."
 WHEN
 Digit
 DISPLAY
 Char
 " is a digit."
 WHEN
 OTHER
 DISPLAY
 "problems found"
 END-EVALUATE
 END-PERFORM
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Conditn/IterIf.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 Iteration-If
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 Num1
 PIC
 9
 VALUE
 ZEROS
 .
 01
 Num2
 PIC
 9
 VALUE
 ZEROS
 .
 01
 Result
 PIC
 99
 VALUE
 ZEROS
 .
 01
 Operator
 PIC
 X
 VALUE
 SPACE
 .
 PROCEDURE
 DIVISION
 .
 Calculator
 .
 PERFORM
 3
 TIMES
 DISPLAY
 "Enter First Number      : "
 WITH
 NO
 ADVANCING
 ACCEPT
 Num1
 DISPLAY
 "Enter Second Number     : "
 WITH
 NO
 ADVANCING
 ACCEPT
 Num2
 DISPLAY
 "Enter operator (+ or *) : "
 WITH
 NO
 ADVANCING
 ACCEPT
 Operator
 IF
 Operator
 =
 "+"
 THEN
 ADD
 Num1
 Num2
 GIVING
 Result
 END-IF
 IF
 Operator
 =
 "*"
 THEN
 MULTIPLY
 Num1
 BY
 Num2
 GIVING
 Result
 END-IF
 DISPLAY
 "Result is = "
 Result
 END-PERFORM
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Indexed/DirectReadIdx.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 DirectReadIdx
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 VideoFile
 ASSIGN
 TO
 "IDXVIDEO.DAT"
 ORGANIZATION
 IS
 INDEXED
 ACCESS
 MODE
 IS
 DYNAMIC
 RECORD
 KEY
 IS
 VideoCode
 ALTERNATE
 RECORD
 KEY
 IS
 VideoTitle
 WITH
 DUPLICATES
 FILE
 STATUS
 IS
 VideoStatus
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 VideoFile
 .
 01
 VideoRecord
 .
 02
 VideoCode
 PIC
 9(5)
 .
 02
 VideoTitle
 PIC
 X(40)
 .
 02
 SupplierCode
 PIC
 99
 .
 WORKING-STORAGE
 SECTION
 .
 01
 VideoStatus
 PIC
 X(2)
 .
 88
 RecordFound
 VALUE
 "00"
 .
 01
 RequiredKey
 PIC
 9
 .
 88
 VideoCodeKey
 VALUE
 1
 .
 88
 VideoTitleKey
 VALUE
 2
 .
 01
 PrnVideoRecord
 .
 02
 PrnVideoCode
 PIC
 9(5)
 .
 02
 PrnVideoTitle
 PIC
 BBBBX(40)
 .
 02
 PrnSupplierCode
 PIC
 BBBB99
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 VideoFile
 .
 DISPLAY
 "Chose key VideoCode = 1,  VideoTitle = 2 ->  "
 WITH
 NO
 ADVANCING
 .
 ACCEPT
 RequiredKey
 .
 IF
 VideoCodeKey
 DISPLAY
 "Enter Video Code (5 digits) -> "
 WITH
 NO
 ADVANCING
 ACCEPT
 VideoCode
 READ
 VideoFile
 KEY
 IS
 VideoCode
 INVALID
 KEY
 DISPLAY
 "VIDEO STATUS :- "
 VideoStatus
 END-READ
 END-IF
 IF
 VideoTitleKey
 DISPLAY
 "Enter Video Title (40 chars) -> "
 WITH
 NO
 ADVANCING
 ACCEPT
 VideoTitle
 READ
 VideoFile
 KEY
 IS
 VideoTitle
 INVALID
 KEY
 DISPLAY
 "VIDEO STATUS :- "
 VideoStatus
 END-READ
 END-IF
 IF
 RecordFound
 MOVE
 VideoCode
 TO
 PrnVideoCode
 MOVE
 VideoTitle
 TO
 PrnVideoTitle
 MOVE
 SupplierCode
 TO
 PrnSupplierCode
 DISPLAY
 PrnVideoRecord
 END-IF
 .
 CLOSE
 VideoFile
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Indexed/Seq2Index.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 Seq2Index
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 VideoFile
 ASSIGN
 TO
 "IDXVIDEO.DAT"
 ORGANIZATION
 IS
 INDEXED
 ACCESS
 MODE
 IS
 RANDOM
 RECORD
 KEY
 IS
 VideoCode
 ALTERNATE
 RECORD
 KEY
 IS
 VideoTitle
 WITH
 DUPLICATES
 FILE
 STATUS
 IS
 VideoStatus
 .
 SELECT
 SeqVideoFile
 ASSIGN
 TO
 "SEQVIDEO.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 VideoFile
 .
 01
 VideoRecord
 .
 02
 VideoCode
 PIC
 9(5)
 .
 02
 VideoTitle
 PIC
 X(40)
 .
 02
 VideoSupplierCode
 PIC
 99
 .
 FD
 SeqVideoFile
 .
 01
 SeqVideoRecord
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 02
 SeqVideoCode
 PIC
 9(5)
 .
 02
 SeqVideoTitle
 PIC
 X(40)
 .
 02
 SeqVideoSupplierCode
 PIC
 99
 .
 WORKING-STORAGE
 SECTION
 .
 01
 VideoStatus
 PIC
 X(2)
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 SeqVideoFile
 .
 OPEN
 OUTPUT
 VideoFile
 .
 READ
 SeqVideoFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .
 PERFORM
 UNTIL
 EndOfFile
 WRITE
 VideoRecord
 FROM
 SeqVideoRecord
 INVALID
 KEY
 DISPLAY
 "VIDEO STATUS :- "
 VideoStatus
 END-WRITE
 READ
 SeqVideoFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 END-PERFORM
 .
 CLOSE
 VideoFile
 SeqVideoFile
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Indexed/SeqReadIdx.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 SeqReadIdx
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 VideoFile
 ASSIGN
 TO
 "IDXVIDEO.DAT"
 ORGANIZATION
 IS
 INDEXED
 ACCESS
 MODE
 IS
 DYNAMIC
 RECORD
 KEY
 IS
 VideoCode
 ALTERNATE
 RECORD
 KEY
 IS
 VideoTitle
 WITH
 DUPLICATES
 FILE
 STATUS
 IS
 VideoStatus
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 VideoFile
 .
 01
 VideoRecord
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUE
 .
 02
 VideoCode
 PIC
 9(5)
 .
 02
 VideoTitle
 PIC
 X(40)
 .
 02
 SupplierCode
 PIC
 99
 .
 WORKING-STORAGE
 SECTION
 .
 01
 VideoStatus
 PIC
 X(2)
 .
 01
 RequiredSequence
 PIC
 9
 .
 88
 VideoCodeSequence
 VALUE
 1
 .
 88
 VideoTitleSequence
 VALUE
 2
 .
 01
 PrnVideoRecord
 .
 02
 PrnVideoCode
 PIC
 9(5)
 .
 02
 PrnVideoTitle
 PIC
 BBBBX(40)
 .
 02
 PrnSupplierCode
 PIC
 BBBB99
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 VideoFile
 .
 DISPLAY
 "Enter key : 1=VideoCode, 2=VideoTitle ->"
 WITH
 NO
 ADVANCING
 .
 ACCEPT
 RequiredSequence
 .
 IF
 VideoTitleSequence
 MOVE
 SPACES
 TO
 VideoTitle
 START
 VideoFile
 KEY
 IS
 GREATER
 THAN
 VideoTitle
 INVALID
 KEY
 DISPLAY
 "VIDEO STATUS :- "
 VideoStatus
 END-START
 END-IF
 READ
 VideoFile
 NEXT
 RECORD
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .
 PERFORM
 UNTIL
 EndOfFile
 MOVE
 VideoCode
 TO
 PrnVideoCode
 MOVE
 VideoTitle
 TO
 PrnVideoTitle
 MOVE
 SupplierCode
 TO
 PrnSupplierCode
 DISPLAY
 PrnVideoRecord
 READ
 VideoFile
 NEXT
 RECORD
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 END-PERFORM
 .
 CLOSE
 VideoFile
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Merge/MERGE.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MergeFiles
 .
 AUTHOR
 .
 MICHAEL
 COUGHLAN
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 StudentFile
 ASSIGN
 TO
 "STUDENTS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 InsertionsFile
 ASSIGN
 TO
 "TRANSINS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 NewStudentFile
 ASSIGN
 TO
 "STUDENTS.NEW"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 WorkFile
 ASSIGN
 TO
 "WORK.TMP"
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 StudentFile
 .
 01
 StudentRec
 PIC
 X(30)
 .
 FD
 InsertionsFile
 .
 01
 InsertionRec
 PIC
 X(30)
 .
 FD
 NewStudentFile
 .
 01
 NewStudentRec
 PIC
 X(30)
 .
 SD
 WorkFile
 .
 01
 WorkRec
 .
 02
 WStudentId
 PIC
 9(7)
 .
 02
 FILLER
 PIC
 X(23)
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 MERGE
 WorkFile
 ON
 ASCENDING
 KEY
 WStudentId
 USING
 InsertionsFile
 StudentFile
 GIVING
 NewStudentFile
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Perform/MileageCount.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MileageCounter
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 Counters
 .
 02
 HundredsCount
 PIC
 99
 VALUE
 ZEROS
 .
 02
 TensCount
 PIC
 99
 VALUE
 ZEROS
 .
 02
 UnitsCount
 PIC
 99
 VALUE
 ZEROS
 .
 01
 DisplayItems
 .
 02
 PrnHunds
 PIC
 9
 .
 02
 PrnTens
 PIC
 9
 .
 02
 PrnUnits
 PIC
 9
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 DISPLAY
 "Using an out-of-line Perform"
 .
 DISPLAY
 "About to start mileage counter simulation"
 .
 PERFORM
 CountMilage
 VARYING
 HundredsCount
 FROM
 0
 BY
 1
 UNTIL
 HundredsCount
 >
 9
 AFTER
 TensCount
 FROM
 0
 BY
 1
 UNTIL
 TensCount
 >
 9
 AFTER
 UnitsCount
 FROM
 0
 BY
 1
 UNTIL
 UnitsCount
 >
 9
 DISPLAY
 "End of mileage counter simulation."
 DISPLAY
 "Now using in-line Performs"
 DISPLAY
 "About to start mileage counter simulation"
 .
 PERFORM
 VARYING
 HundredsCount
 FROM
 0
 BY
 1
 UNTIL
 HundredsCount
 >
 9
 PERFORM
 VARYING
 TensCount
 FROM
 0
 BY
 1
 UNTIL
 TensCount
 >
 9
 PERFORM
 VARYING
 UnitsCount
 FROM
 0
 BY
 1
 UNTIL
 UnitsCount
 >
 9
 MOVE
 HundredsCount
 TO
 PrnHunds
 MOVE
 TensCount
 TO
 PrnTens
 MOVE
 UnitsCount
 TO
 PrnUnits
 DISPLAY
 PrnHunds
 "-"
 PrnTens
 "-"
 PrnUnits
 END-PERFORM
 END-PERFORM
 END-PERFORM
 .
 DISPLAY
 "End of mileage counter simulation."
 STOP
 RUN
 .
 CountMilage
 .
 MOVE
 HundredsCount
 TO
 PrnHunds
 MOVE
 TensCount
 TO
 PrnTens
 MOVE
 UnitsCount
 TO
 PrnUnits
 DISPLAY
 PrnHunds
 "-"
 PrnTens
 "-"
 PrnUnits
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Perform/PERFORM1.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 PerformFormat1
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 PROCEDURE
 DIVISION
 .
 TopLevel
 .
 DISPLAY
 "In TopLevel. Starting to run program"
 PERFORM
 OneLevelDown
 DISPLAY
 "Back in TopLevel."
 .
 STOP
 RUN
 .
 TwoLevelsDown
 .
 DISPLAY
 ">>>>>>>> Now in TwoLevelsDown."
 PERFORM
 ThreeLevelsDown
 .
 DISPLAY
 ">>>>>>>> Back in TwoLevelsDown."
 .
 OneLevelDown
 .
 DISPLAY
 ">>>> Now in OneLevelDown"
 PERFORM
 TwoLevelsDown
 DISPLAY
 ">>>> Back in OneLevelDown"
 .
 ThreeLevelsDown
 .
 DISPLAY
 ">>>>>>>>>>>> Now in ThreeLevelsDown"
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Perform/PERFORM3.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 PerformFormat3
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 IterCount
 PIC
 99
 VALUE
 ZEROS
 .
 88
 MaxCountReached
 VALUE
 99
 .
 01
 UserInput
 PIC
 99
 VALUE
 ZEROS
 .
 88
 EndOfUserInput
 VALUE
 ZEROS
 .
 01
 RunningTotal
 PIC
 999
 VALUE
 ZEROS
 .
 01
 AverageValue
 PIC
 99
 VALUES
 ZEROS
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 PERFORM
 UNTIL
 IterCount
 =
 5
 DISPLAY
 "IterCount = "
 IterCount
 ADD
 1
 TO
 IterCount
 END-PERFORM
 DISPLAY
 "Finished in line Perform."
 INITIALIZE
 Itercount
 DISPLAY
 "Enter a stream of up to 99 numbers."
 DISPLAY
 "Each number must be in the range 1-99.  Enter 0 to stop."
 DISPLAY
 "Enter number :- "
 WITH
 NO
 ADVANCING
 ACCEPT
 UserInput
 PERFORM
 GetUserInput
 UNTIL
 EndOfUserInput
 OR
 MaxCountReached
 DISPLAY
 "The final total is - "
 RunningTotal
 DISPLAY
 "The final count is - "
 IterCount
 COMPUTE
 AverageValue
 =
 RunningTotal
 /
 IterCount
 DISPLAY
 "The average value entered is - "
 AverageValue
 STOP
 RUN
 .
 GetUserInput
 .
 ADD
 UserInput
 TO
 RunningTotal
 ON
 SIZE
 ERROR
 DISPLAY
 "Error - new total too large for data-item."
 NOT
 ON
 SIZE
 ERROR
 ADD
 1
 TO
 IterCount
 END-ADD
 END-ADD
 DISPLAY
 "Total so far is - "
 RunningTotal
 DISPLAY
 "Count so far is - "
 IterCount
 DISPLAY
 "Enter number :- "
 WITH
 NO
 ADVANCING
 ACCEPT
 UserInput
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Perform/PERFORM4.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 PerformFormat4
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 LoopCount
 PIC
 9
 VALUE
 ZEROS
 .
 01
 LoopCount2
 PIC
 S9
 VALUE
 ZEROS
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 DISPLAY
 "Start WHILE Iteration of LoopBody"
 PERFORM
 LoopBody
 WITH
 TEST
 BEFORE
 VARYING
 LoopCount
 FROM
 1
 BY
 2
 UNTIL
 LoopCount
 GREATER
 THAN
 5
 .
 DISPLAY
 "Finished WHILE iteration.  LoopCount = "
 LoopCount
 .
 DISPLAY
 "Start REPEAT Iteration of LoopBody"
 PERFORM
 LoopBody
 WITH
 TEST
 AFTER
 VARYING
 LoopCount
 FROM
 1
 BY
 2
 UNTIL
 LoopCount
 GREATER
 THAN
 5
 .
 DISPLAY
 "Finished REPEAT iteration. LoopCount = "
 LoopCount
 .
 DISPLAY
 "Start inline loops"
 PERFORM
 VARYING
 LoopCount
 FROM
 1
 BY
 1
 UNTIL
 LoopCount
 GREATER
 THAN
 4
 PERFORM
 VARYING
 LoopCount2
 FROM
 5
 BY
 -2
 UNTIL
 LoopCount2
 LESS
 THAN
 ZERO
 DISPLAY
 "InLine loop "
 WITH
 NO
 ADVANCING
 DISPLAY
 "LoopCount = "
 LoopCount
 " LoopCount2 = "
 LoopCount2
 END-PERFORM
 END-PERFORM
 .
 DISPLAY
 "Finished inline loops"
 .
 DISPLAY
 "Start PERFORM VARYING..AFTER"
 .
 PERFORM
 LoopBody
 VARYING
 LoopCount
 FROM
 1
 BY
 1
 UNTIL
 LoopCount
 GREATER
 THAN
 4
 AFTER
 LoopCount2
 FROM
 5
 BY
 -2
 UNTIL
 LoopCount2
 LESS
 THAN
 ZERO
 .
 DISPLAY
 "Finished PERFORM VARYING..AFTER"
 .
 STOP
 RUN
 .
 LoopBody
 .
 DISPLAY
 "LoopBody "
 WITH
 NO
 ADVANCING
 DISPLAY
 "LoopCount = "
 LoopCount
 " LoopCount2 = "
 LoopCount2
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Relative/ReadREL.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 ReadRelative
 .
 AUTHOR
 .
 MICHAEL
 COUGHLAN
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 SupplierFile
 ASSIGN
 TO
 "RELSUPP.DAT"
 ORGANIZATION
 IS
 RELATIVE
 ACCESS
 MODE
 IS
 DYNAMIC
 RELATIVE
 KEY
 IS
 SupplierKey
 FILE
 STATUS
 IS
 Supplierstatus
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 SupplierFile
 .
 01
 SupplierRecord
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 02
 SupplierCode
 PIC
 99
 .
 02
 SupplierName
 PIC
 X(20)
 .
 02
 SupplierAddress
 PIC
 X(50)
 .
 WORKING-STORAGE
 SECTION
 .
 01
 SupplierStatus
 PIC
 X(2)
 .
 88
 RecordFound
 VALUE
 "00"
 .
 01
 SupplierKey
 PIC
 99
 .
 01
 PrnSupplierRecord
 .
 02
 PrnSupplierCode
 PIC
 BB99
 .
 02
 PrnSupplierName
 PIC
 BBX(20)
 .
 02
 PrnSupplierAddress
 PIC
 BBX(50)
 .
 01
 ReadType
 PIC
 9
 .
 88
 DirectRead
 VALUE
 1
 .
 88
 SequentialRead
 VALUE
 2
 .
 PROCEDURE
 DIVISION
 .
 BEGIN
 .
 OPEN
 INPUT
 SupplierFile
 .
 DISPLAY
 "Read type : Direct read = 1, Sequential read = 2 --> "
 WITH
 NO
 ADVANCING
 .
 ACCEPT
 ReadType
 .
 IF
 DirectRead
 DISPLAY
 "Enter supplier code key (2 digits) --> "
 WITH
 NO
 ADVANCING
 ACCEPT
 SupplierKey
 READ
 SupplierFile
 INVALID
 KEY
 DISPLAY
 "SUPP STATUS :-"
 SupplierStatus
 END-READ
 PERFORM
 DisplayRecord
 END-IF
 IF
 SequentialRead
 READ
 SupplierFile
 NEXT
 RECORD
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 PERFORM
 UNTIL
 EndOfFile
 PERFORM
 DisplayRecord
 READ
 SupplierFile
 NEXT
 RECORD
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 END-PERFORM
 END-IF
 CLOSE
 SupplierFile
 .
 STOP
 RUN
 .
 DisplayRecord
 .
 IF
 RecordFound
 MOVE
 SupplierCode
 TO
 PrnSupplierCode
 MOVE
 SupplierName
 TO
 PrnSupplierName
 MOVE
 SupplierAddress
 TO
 PrnSupplierAddress
 DISPLAY
 PrnSupplierRecord
 END-IF
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Relative/Seq2Rel.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 Seq2Rel
 .
 AUTHOR
 .
 MICHAEL
 COUGHLAN
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 SupplierFile
 ASSIGN
 TO
 "RELSUPP.DAT"
 ORGANIZATION
 IS
 RELATIVE
 ACCESS
 MODE
 IS
 RANDOM
 RELATIVE
 KEY
 IS
 SupplierKey
 FILE
 STATUS
 IS
 Supplierstatus
 .
 SELECT
 SupplierFileSeq
 ASSIGN
 TO
 "SEQSUPP.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 SupplierFile
 .
 01
 SupplierRecord
 .
 02
 SupplierCode
 PIC
 99
 .
 02
 SupplierName
 PIC
 X(20)
 .
 02
 SupplierAddress
 PIC
 X(50)
 .
 FD
 SupplierFileSeq
 .
 01
 SupplierRecordSeq
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 02
 SupplierCodeSeq
 PIC
 99
 .
 02
 SupplierNameSeq
 PIC
 X(20)
 .
 02
 SupplierAddressSeq
 PIC
 X(50)
 .
 WORKING-STORAGE
 SECTION
 .
 01
 SupplierStatus
 PIC
 X(2)
 .
 01
 SupplierKey
 PIC
 99
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 OUTPUT
 SupplierFile
 .
 OPEN
 INPUT
 SupplierFileSeq
 .
 READ
 SupplierFileSeq
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 PERFORM
 UNTIL
 EndOfFile
 MOVE
 SupplierCodeSeq
 TO
 SupplierKey
 MOVE
 SupplierRecordSeq
 TO
 SupplierRecord
 WRITE
 SupplierRecord
 INVALID
 KEY
 DISPLAY
 "Supplier status = "
 SupplierStatus
 END-WRITE
 READ
 SupplierFileSeq
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 END-PERFORM
 .
 CLOSE
 SupplierFile
 SupplierFileSeq
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/ReportWriter/RepWriteA.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 ReportExampleA
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 SalesFile
 ASSIGN
 TO
 "GBSALES.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 PrintFile
 ASSIGN
 TO
 "SALESREPORTA.LPT"
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 SalesFile
 .
 01
 SalesRecord
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 02
 CityCode
 PIC
 9
 .
 02
 SalesPersonNum
 PIC
 9
 .
 02
 ValueOfSale
 PIC
 9(4)V99
 .
 FD
 PrintFile
 REPORT
 IS
 SalesReport
 .
 WORKING-STORAGE
 SECTION
 .
 01
 NameTable
 .
 02
 TableValues
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Dublin   Belfast  "
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Cork     Galway   "
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Sligo    Waterford"
 .
 03
 FILLER
 PIC
 X(9)
 VALUE
 "Limerick"
 .
 02
 FILLER
 REDEFINES
 TableValues
 .
 03
 CityName
 PIC
 X(9)
 OCCURS
 7
 TIMES
 .
 REPORT
 SECTION
 .
 RD
 SalesReport
 CONTROLS
 ARE
 SalesPersonNum
 PAGE
 LIMIT
 IS
 66
 HEADING
 1
 FIRST
 DETAIL
 6
 LAST
 DETAIL
 42
 FOOTING
 52
 .
 01
 TYPE
 IS
 PAGE
 HEADING
 .
 02
 LINE
 1
 .
 03
 COLUMN
 12
 PIC
 X(32)
 VALUE
 "An example COBOL Report Program"
 .
 02
 LINE
 2
 .
 03
 COLUMN
 6
 PIC
 X(17)
 VALUE
 "Bible Salesperson"
 .
 03
 COLUMN
 23
 PIC
 X(26)
 VALUE
 " - Sales and Salary Report"
 .
 02
 LINE
 4
 .
 03
 COLUMN
 2
 PIC
 X(4)
 VALUE
 "City"
 .
 03
 COLUMN
 12
 PIC
 X(11)
 VALUE
 "Salesperson"
 .
 03
 COLUMN
 28
 PIC
 X(4)
 VALUE
 "Sale"
 .
 02
 LINE
 5
 .
 03
 COLUMN
 2
 PIC
 X(4)
 VALUE
 "Name"
 .
 03
 COLUMN
 13
 PIC
 X(6)
 VALUE
 "Number"
 .
 03
 COLUMN
 28
 PIC
 X(5)
 VALUE
 "Value"
 .
 01
 DetailLine
 TYPE
 IS
 DETAIL
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 1
 PIC
 X(9)
 SOURCE
 CityName(CityCode)
 .
 03
 COLUMN
 15
 PIC
 9
 SOURCE
 SalesPersonNum
 .
 03
 COLUMN
 25
 PIC
 $$,$$$.99
 SOURCE
 ValueOfSale
 .
 01
 SalesPersonGrp
 TYPE
 IS
 CONTROL
 FOOTING
 SalesPersonNum
 NEXT
 GROUP
 PLUS
 2
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(21)
 VALUE
 "Sales for salesperson"
 .
 03
 COLUMN
 37
 PIC
 9
 SOURCE
 SalesPersonNum
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 SMS
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 ValueOfSale
 .
 01
 TYPE
 IS
 PAGE
 FOOTING
 .
 02
 LINE
 IS
 53
 .
 03
 COLUMN
 1
 PIC
 X(29)
 VALUE
 "Programmer - Michael Coughlan"
 .
 03
 COLUMN
 45
 PIC
 X(6)
 VALUE
 "Page :"
 .
 03
 COLUMN
 52
 PIC
 Z9
 SOURCE
 PAGE-COUNTER
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 SalesFile
 .
 OPEN
 OUTPUT
 PrintFile
 .
 READ
 SalesFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .
 INITIATE
 SalesReport
 .
 PERFORM
 PrintSalaryReport
 UNTIL
 EndOfFile
 .
 TERMINATE
 SalesReport
 .
 CLOSE
 SalesFile
 PrintFile
 .
 STOP
 RUN
 .
 PrintSalaryReport
 .
 GENERATE
 DetailLine
 .
 READ
 SalesFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/ReportWriter/RepWriteB.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 ReportExampleB
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 SalesFile
 ASSIGN
 TO
 "GBSALES.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 PrintFile
 ASSIGN
 TO
 "SALESREPORTB.LPT"
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 SalesFile
 .
 01
 SalesRecord
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 02
 CityCode
 PIC
 9
 .
 02
 SalesPersonNum
 PIC
 9
 .
 02
 ValueOfSale
 PIC
 9(4)V99
 .
 FD
 PrintFile
 REPORT
 IS
 SalesReport
 .
 WORKING-STORAGE
 SECTION
 .
 01
 NameTable
 .
 02
 TableValues
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Dublin   Belfast  "
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Cork     Galway   "
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Sligo    Waterford"
 .
 03
 FILLER
 PIC
 X(9)
 VALUE
 "Limerick"
 .
 02
 FILLER
 REDEFINES
 TableValues
 .
 03
 CityName
 PIC
 X(9)
 OCCURS
 7
 TIMES
 .
 REPORT
 SECTION
 .
 RD
 SalesReport
 CONTROLS
 ARE
 FINAL
 CityCode
 SalesPersonNum
 PAGE
 LIMIT
 IS
 66
 HEADING
 1
 FIRST
 DETAIL
 6
 LAST
 DETAIL
 42
 FOOTING
 52
 .
 01
 TYPE
 IS
 PAGE
 HEADING
 .
 02
 LINE
 1
 .
 03
 COLUMN
 12
 PIC
 X(32)
 VALUE
 "An example COBOL Report Program"
 .
 02
 LINE
 2
 .
 03
 COLUMN
 6
 PIC
 X(17)
 VALUE
 "Bible Salesperson"
 .
 03
 COLUMN
 23
 PIC
 X(26)
 VALUE
 " - Sales and Salary Report"
 .
 02
 LINE
 4
 .
 03
 COLUMN
 2
 PIC
 X(4)
 VALUE
 "City"
 .
 03
 COLUMN
 12
 PIC
 X(11)
 VALUE
 "Salesperson"
 .
 03
 COLUMN
 28
 PIC
 X(4)
 VALUE
 "Sale"
 .
 02
 LINE
 5
 .
 03
 COLUMN
 2
 PIC
 X(4)
 VALUE
 "Name"
 .
 03
 COLUMN
 13
 PIC
 X(6)
 VALUE
 "Number"
 .
 03
 COLUMN
 28
 PIC
 X(5)
 VALUE
 "Value"
 .
 01
 DetailLine
 TYPE
 IS
 DETAIL
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 1
 PIC
 X(9)
 SOURCE
 CityName(CityCode)
 GROUP
 INDICATE
 .
 03
 COLUMN
 15
 PIC
 9
 SOURCE
 SalesPersonNum
 GROUP
 INDICATE
 .
 03
 COLUMN
 25
 PIC
 $$,$$$.99
 SOURCE
 ValueOfSale
 .
 01
 SalesPersonGrp
 TYPE
 IS
 CONTROL
 FOOTING
 SalesPersonNum
 NEXT
 GROUP
 PLUS
 2
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(21)
 VALUE
 "Sales for salesperson"
 .
 03
 COLUMN
 37
 PIC
 9
 SOURCE
 SalesPersonNum
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 SMS
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 ValueOfSale
 .
 01
 CityGrp
 TYPE
 IS
 CONTROL
 FOOTING
 CityCode
 NEXT
 GROUP
 PLUS
 2
 .
 02
 LINE
 IS
 PLUS
 2
 .
 03
 COLUMN
 15
 PIC
 X(9)
 VALUE
 "Sales for"
 .
 03
 COLUMN
 25
 PIC
 X(9)
 SOURCE
 CityName(CityCode)
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 CS
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 SMS
 .
 01
 TotalSalesGrp
 TYPE
 IS
 CONTROL
 FOOTING
 FINAL
 .
 02
 LINE
 IS
 PLUS
 4
 .
 03
 COLUMN
 15
 PIC
 X(11)
 VALUE
 "Total sales"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 CS
 .
 01
 TYPE
 IS
 PAGE
 FOOTING
 .
 02
 LINE
 IS
 53
 .
 03
 COLUMN
 1
 PIC
 X(29)
 VALUE
 "Programmer - Michael Coughlan"
 .
 03
 COLUMN
 45
 PIC
 X(6)
 VALUE
 "Page :"
 .
 03
 COLUMN
 52
 PIC
 Z9
 SOURCE
 PAGE-COUNTER
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 SalesFile
 .
 OPEN
 OUTPUT
 PrintFile
 .
 READ
 SalesFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .
 INITIATE
 SalesReport
 .
 PERFORM
 PrintSalaryReport
 UNTIL
 EndOfFile
 .
 TERMINATE
 SalesReport
 .
 CLOSE
 SalesFile
 PrintFile
 .
 STOP
 RUN
 .
 PrintSalaryReport
 .
 GENERATE
 DetailLine
 .
 READ
 SalesFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/ReportWriter/RepWriteFull.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 ReportExampleFull
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 SalesFile
 ASSIGN
 TO
 "GBSALES.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 PrintFile
 ASSIGN
 TO
 "SALESREPORT.LPT"
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 SalesFile
 .
 01
 SalesRecord
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 02
 CityCode
 PIC
 9
 .
 02
 SalesPersonNum
 PIC
 9
 .
 02
 ValueOfSale
 PIC
 9(4)V99
 .
 FD
 PrintFile
 REPORT
 IS
 SalesReport
 .
 WORKING-STORAGE
 SECTION
 .
 01
 NameTable
 .
 02
 TableValues
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Dublin   Belfast  "
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Cork     Galway   "
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Sligo    Waterford"
 .
 03
 FILLER
 PIC
 X(9)
 VALUE
 "Limerick"
 .
 02
 FILLER
 REDEFINES
 TableValues
 .
 03
 CityName
 PIC
 X(9)
 OCCURS
 7
 TIMES
 .
 01
 RateTable
 .
 02
 TableValues
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "12300321004350056700123002340034500"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "12300543001230034200111001220013300"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "12000321001760018700133001440015500"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "32100123003210012000166001770018800"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "34500345004560054300111001220013200"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "19000180001780017900444003330022200"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "16700156001450014600222001110021200"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "12000132001230014300121003210043200"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "15400165001640017600111007770033300"
 .
 02
 FILLER
 REDEFINES
 TableValues
 .
 03
 City
 OCCURS
 7
 TIMES
 .
 04
 FixedRate
 PIC
 9(3)V99
 OCCURS
 9
 TIMES
 .
 01
 MiscVariables
 .
 02
 Commission
 PIC
 9(4)V99
 .
 02
 Percentage
 PIC
 V99
 VALUE
 .05
 .
 02
 Salary
 PIC
 9(6)V99
 .
 02
 SalesPersonNow
 PIC
 9
 .
 02
 CityNow
 PIC
 9
 .
 REPORT
 SECTION
 .
 RD
 SalesReport
 CONTROLS
 ARE
 FINAL
 CityCode
 SalesPersonNum
 PAGE
 LIMIT
 IS
 66
 HEADING
 1
 FIRST
 DETAIL
 6
 LAST
 DETAIL
 42
 FOOTING
 52
 .
 01
 TYPE
 IS
 PAGE
 HEADING
 .
 02
 LINE
 1
 .
 03
 COLUMN
 12
 PIC
 X(32)
 VALUE
 "An example COBOL Report Program"
 .
 02
 LINE
 2
 .
 03
 COLUMN
 6
 PIC
 X(17)
 VALUE
 "Bible Salesperson"
 .
 03
 COLUMN
 23
 PIC
 X(26)
 VALUE
 " - Sales and Salary Report"
 .
 02
 LINE
 4
 .
 03
 COLUMN
 2
 PIC
 X(4)
 VALUE
 "City"
 .
 03
 COLUMN
 12
 PIC
 X(11)
 VALUE
 "Salesperson"
 .
 03
 COLUMN
 28
 PIC
 X(4)
 VALUE
 "Sale"
 .
 02
 LINE
 5
 .
 03
 COLUMN
 2
 PIC
 X(4)
 VALUE
 "Name"
 .
 03
 COLUMN
 13
 PIC
 X(6)
 VALUE
 "Number"
 .
 03
 COLUMN
 28
 PIC
 X(5)
 VALUE
 "Value"
 .
 01
 DetailLine
 TYPE
 IS
 DETAIL
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 1
 PIC
 X(9)
 SOURCE
 CityName(CityCode)
 GROUP
 INDICATE
 .
 03
 COLUMN
 15
 PIC
 9
 SOURCE
 SalesPersonNum
 GROUP
 INDICATE
 .
 03
 COLUMN
 25
 PIC
 $$,$$$.99
 SOURCE
 ValueOfSale
 .
 01
 SalesPersonGrp
 TYPE
 IS
 CONTROL
 FOOTING
 SalesPersonNum
 NEXT
 GROUP
 PLUS
 2
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(21)
 VALUE
 "Sales for salesperson"
 .
 03
 COLUMN
 37
 PIC
 9
 SOURCE
 SalesPersonNum
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 SMS
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 ValueOfSale
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(19)
 VALUE
 "Sales commission is"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SOURCE
 Commission
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(22)
 VALUE
 "Salesperson salary is"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SOURCE
 Salary
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(30)
 VALUE
 "Current  salesperson number = "
 .
 03
 COLUMN
 45
 PIC
 9
 SOURCE
 SalesPersonNow
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(30)
 VALUE
 "Previous salesperson number = "
 .
 03
 COLUMN
 45
 PIC
 9
 SOURCE
 SalesPersonNum
 .
 01
 CityGrp
 TYPE
 IS
 CONTROL
 FOOTING
 CityCode
 NEXT
 GROUP
 PLUS
 2
 .
 02
 LINE
 IS
 PLUS
 2
 .
 03
 COLUMN
 15
 PIC
 X(9)
 VALUE
 "Sales for"
 .
 03
 COLUMN
 25
 PIC
 X(9)
 SOURCE
 CityName(CityCode)
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 CS
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 SMS
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(12)
 VALUE
 "Current city"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 9
 SOURCE
 CityNow
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(13)
 VALUE
 "Previous city"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 9
 SOURCE
 CityCode
 .
 01
 TotalSalesGrp
 TYPE
 IS
 CONTROL
 FOOTING
 FINAL
 .
 02
 LINE
 IS
 PLUS
 4
 .
 03
 COLUMN
 15
 PIC
 X(11)
 VALUE
 "Total sales"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 CS
 .
 01
 TYPE
 IS
 PAGE
 FOOTING
 .
 02
 LINE
 IS
 53
 .
 03
 COLUMN
 1
 PIC
 X(29)
 VALUE
 "Programmer - Michael Coughlan"
 .
 03
 COLUMN
 45
 PIC
 X(6)
 VALUE
 "Page :"
 .
 03
 COLUMN
 52
 PIC
 Z9
 SOURCE
 PAGE-COUNTER
 .
 PROCEDURE
 DIVISION
 .
 DECLARATIVES
 .
 Calc
 SECTION
 .
 USE
 BEFORE
 REPORTING
 SalesPersonGrp
 .
 Calculate-Salary
 .
 MULTIPLY
 SMS
 BY
 Percentage
 GIVING
 Commission
 ROUNDED
 .
 ADD
 Commission
 FixedRate(CityCode,SalesPersonNum
 )
 GIVING
 Salary
 .
 END
 DECLARATIVES
 .
 Main
 SECTION
 .
 Begin
 .
 OPEN
 INPUT
 SalesFile
 .
 OPEN
 OUTPUT
 PrintFile
 .
 READ
 SalesFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .
 INITIATE
 SalesReport
 .
 PERFORM
 PrintSalaryReport
 UNTIL
 EndOfFile
 .
 TERMINATE
 SalesReport
 .
 CLOSE
 SalesFile
 PrintFile
 .
 STOP
 RUN
 .
 PrintSalaryReport
 .
 MOVE
 CityCode
 TO
 CityNow
 .
 MOVE
 SalesPersonNum
 TO
 SalesPersonNow
 .
 GENERATE
 DetailLine
 .
 READ
 SalesFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/ReportWriter/RepWriteSumm.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 ReportExampleSummary
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 SalesFile
 ASSIGN
 TO
 "GBSALES.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 PrintFile
 ASSIGN
 TO
 "SUMMARYSALESREPORT.LPT"
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 SalesFile
 .
 01
 SalesRecord
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 02
 CityCode
 PIC
 9
 .
 02
 SalesPersonNum
 PIC
 9
 .
 02
 ValueOfSale
 PIC
 9(4)V99
 .
 FD
 PrintFile
 REPORT
 IS
 SalesReport
 .
 WORKING-STORAGE
 SECTION
 .
 01
 NameTable
 .
 02
 TableValues
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Dublin   Belfast  "
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Cork     Galway   "
 .
 03
 FILLER
 PIC
 X(18)
 VALUE
 "Sligo    Waterford"
 .
 03
 FILLER
 PIC
 X(9)
 VALUE
 "Limerick"
 .
 02
 FILLER
 REDEFINES
 TableValues
 .
 03
 CityName
 PIC
 X(9)
 OCCURS
 7
 TIMES
 .
 01
 RateTable
 .
 02
 TableValues
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "12300321004350056700123002340034500"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "12300543001230034200111001220013300"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "12000321001760018700133001440015500"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "32100123003210012000166001770018800"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "34500345004560054300111001220013200"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "19000180001780017900444003330022200"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "16700156001450014600222001110021200"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "12000132001230014300121003210043200"
 .
 03
 FILLER
 PIC
 X(35)
 VALUE
 "15400165001640017600111007770033300"
 .
 02
 FILLER
 REDEFINES
 TableValues
 .
 03
 City
 OCCURS
 7
 TIMES
 .
 04
 FixedRate
 PIC
 9(3)V99
 OCCURS
 9
 TIMES
 .
 01
 MiscVariables
 .
 02
 Commission
 PIC
 9(4)V99
 .
 02
 Percentage
 PIC
 V99
 VALUE
 .05
 .
 02
 Salary
 PIC
 9(6)V99
 .
 02
 SalesPersonNow
 PIC
 9
 .
 02
 CityNow
 PIC
 9
 .
 REPORT
 SECTION
 .
 RD
 SalesReport
 CONTROLS
 ARE
 FINAL
 CityCode
 SalesPersonNum
 PAGE
 LIMIT
 IS
 66
 HEADING
 1
 FIRST
 DETAIL
 6
 LAST
 DETAIL
 42
 FOOTING
 52
 .
 01
 TYPE
 IS
 PAGE
 HEADING
 .
 02
 LINE
 1
 .
 03
 COLUMN
 12
 PIC
 X(32)
 VALUE
 "An example COBOL Report Program"
 .
 02
 LINE
 2
 .
 03
 COLUMN
 6
 PIC
 X(17)
 VALUE
 "Bible Salesperson"
 .
 03
 COLUMN
 23
 PIC
 X(26)
 VALUE
 " - Sales and Salary Report"
 .
 02
 LINE
 4
 .
 03
 COLUMN
 2
 PIC
 X(4)
 VALUE
 "City"
 .
 03
 COLUMN
 12
 PIC
 X(11)
 VALUE
 "Salesperson"
 .
 03
 COLUMN
 28
 PIC
 X(4)
 VALUE
 "Sale"
 .
 02
 LINE
 5
 .
 03
 COLUMN
 2
 PIC
 X(4)
 VALUE
 "Name"
 .
 03
 COLUMN
 13
 PIC
 X(6)
 VALUE
 "Number"
 .
 03
 COLUMN
 28
 PIC
 X(5)
 VALUE
 "Value"
 .
 01
 DetailLine
 TYPE
 IS
 DETAIL
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 1
 PIC
 X(9)
 SOURCE
 CityName(CityCode)
 GROUP
 INDICATE
 .
 03
 COLUMN
 15
 PIC
 9
 SOURCE
 SalesPersonNum
 GROUP
 INDICATE
 .
 03
 COLUMN
 25
 PIC
 $$,$$$.99
 SOURCE
 ValueOfSale
 .
 01
 SalesPersonGrp
 TYPE
 IS
 CONTROL
 FOOTING
 SalesPersonNum
 NEXT
 GROUP
 PLUS
 2
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(21)
 VALUE
 "Sales for salesperson"
 .
 03
 COLUMN
 37
 PIC
 9
 SOURCE
 SalesPersonNum
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 SMS
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 ValueOfSale
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(19)
 VALUE
 "Sales commission is"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SOURCE
 Commission
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(22)
 VALUE
 "Salesperson salary is"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SOURCE
 Salary
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(30)
 VALUE
 "Current  salesperson number = "
 .
 03
 COLUMN
 45
 PIC
 9
 SOURCE
 SalesPersonNow
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(30)
 VALUE
 "Previous salesperson number = "
 .
 03
 COLUMN
 45
 PIC
 9
 SOURCE
 SalesPersonNum
 .
 01
 CityGrp
 TYPE
 IS
 CONTROL
 FOOTING
 CityCode
 NEXT
 GROUP
 PLUS
 2
 .
 02
 LINE
 IS
 PLUS
 2
 .
 03
 COLUMN
 15
 PIC
 X(9)
 VALUE
 "Sales for"
 .
 03
 COLUMN
 25
 PIC
 X(9)
 SOURCE
 CityName(CityCode)
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 CS
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 SMS
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(12)
 VALUE
 "Current city"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 9
 SOURCE
 CityNow
 .
 02
 LINE
 IS
 PLUS
 1
 .
 03
 COLUMN
 15
 PIC
 X(13)
 VALUE
 "Previous city"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 9
 SOURCE
 CityCode
 .
 01
 TotalSalesGrp
 TYPE
 IS
 CONTROL
 FOOTING
 FINAL
 .
 02
 LINE
 IS
 PLUS
 4
 .
 03
 COLUMN
 15
 PIC
 X(11)
 VALUE
 "Total sales"
 .
 03
 COLUMN
 43
 PIC
 X
 VALUE
 "="
 .
 03
 COLUMN
 45
 PIC
 $$$$$,$$$.99
 SUM
 CS
 .
 01
 TYPE
 IS
 PAGE
 FOOTING
 .
 02
 LINE
 IS
 53
 .
 03
 COLUMN
 1
 PIC
 X(29)
 VALUE
 "Programmer - Michael Coughlan"
 .
 03
 COLUMN
 45
 PIC
 X(6)
 VALUE
 "Page :"
 .
 03
 COLUMN
 52
 PIC
 Z9
 SOURCE
 PAGE-COUNTER
 .
 PROCEDURE
 DIVISION
 .
 DECLARATIVES
 .
 Calc
 SECTION
 .
 USE
 BEFORE
 REPORTING
 SalesPersonGrp
 .
 Calculate-Salary
 .
 MULTIPLY
 SMS
 BY
 Percentage
 GIVING
 Commission
 ROUNDED
 .
 ADD
 Commission
 FixedRate(CityCode,SalesPersonNum
 )
 GIVING
 Salary
 .
 END
 DECLARATIVES
 .
 Main
 SECTION
 .
 Begin
 .
 OPEN
 INPUT
 SalesFile
 .
 OPEN
 OUTPUT
 PrintFile
 .
 READ
 SalesFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .
 INITIATE
 SalesReport
 .
 PERFORM
 PrintSalaryReport
 UNTIL
 EndOfFile
 .
 TERMINATE
 SalesReport
 .
 CLOSE
 SalesFile
 PrintFile
 .
 STOP
 RUN
 .
 PrintSalaryReport
 .
 MOVE
 CityCode
 TO
 CityNow
 .
 MOVE
 SalesPersonNum
 TO
 SalesPersonNow
 .
 GENERATE
 SalesReport
 .
 READ
 SalesFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SeqIns/seqinsert.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 InsertRecords
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 StudentRecords
 ASSIGN
 "STUDENTS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 ACCESS
 MODE
 IS
 SEQUENTIAL
 .
 SELECT
 TransRecords
 ASSIGN
 "TRANSINS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 ACCESS
 MODE
 IS
 SEQUENTIAL
 .
 SELECT
 NewStudentRecords
 ASSIGN
 "STUDENTS.NEW"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 ACCESS
 MODE
 IS
 SEQUENTIAL
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 StudentRecords
 .
 01
 StudentRecord
 .
 88
 EndOfStudentFile
 VALUE
 HIGH-VALUES
 .
 02
 StudentID
 PIC
 X(7)
 .
 02
 FILLER
 PIC
 X(23)
 .
 FD
 TransRecords
 .
 01
 TransRecord
 .
 88
 EndOfTransFile
 VALUE
 HIGH-VALUES
 .
 02
 TransStudentID
 PIC
 X(7)
 .
 02
 FILLER
 PIC
 X(23)
 .
 FD
 NewStudentRecords
 .
 01
 NewStudentRecord
 PIC
 X(30)
 .
 PROCEDURE
 DIVISION
 .
 BEGIN
 .
 OPEN
 INPUT
 StudentRecords
 OPEN
 INPUT
 TransRecords
 OPEN
 OUTPUT
 NewStudentRecords
 READ
 StudentRecords
 AT
 END
 SET
 EndOfStudentFile
 TO
 TRUE
 END-READ
 READ
 TransRecords
 AT
 END
 SET
 EndOfTransFile
 TO
 TRUE
 END-READ
 PERFORM
 UNTIL
 (EndOfStudentFile)
 AND
 (EndOfTransFile)
 EVALUATE
 TRUE
 WHEN
 (StudentID
 <
 TransStudentID)
 WRITE
 NewStudentRecord
 FROM
 StudentRecord
 READ
 StudentRecords
 AT
 END
 SET
 EndOfStudentFile
 TO
 TRUE
 END-READ
 WHEN
 (StudentID
 >
 TransStudentID)
 WRITE
 NewStudentRecord
 FROM
 TransRecord
 READ
 TransRecords
 AT
 END
 SET
 EndOfTransFile
 TO
 TRUE
 END-READ
 WHEN
 (StudentID
 =
 TransStudentID)
 DISPLAY
 "Error - "
 TransStudentId
 " already exists in file"
 READ
 TransRecords
 AT
 END
 SET
 EndOfTransFile
 TO
 TRUE
 END-READ
 END-EVALUATE
 END-PERFORM
 CLOSE
 StudentRecords
 CLOSE
 TransRecords
 CLOSE
 NewStudentRecords
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SeqRead/Seqread.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 SeqRead
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 StudentFile
 ASSIGN
 TO
 "STUDENTS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 StudentFile
 .
 01
 StudentDetails
 .
 88
 EndOfStudentFile
 VALUE
 HIGH-VALUES
 .
 02
 StudentId
 PIC
 9(7)
 .
 02
 StudentName
 .
 03
 Surname
 PIC
 X(8)
 .
 03
 Initials
 PIC
 XX
 .
 02
 DateOfBirth
 .
 03
 YOBirth
 PIC
 9(4)
 .
 03
 MOBirth
 PIC
 9(2)
 .
 03
 DOBirth
 PIC
 9(2)
 .
 02
 CourseCode
 PIC
 X(4)
 .
 02
 Gender
 PIC
 X
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 StudentFile
 READ
 StudentFile
 AT
 END
 SET
 EndOfStudentFile
 TO
 TRUE
 END-READ
 PERFORM
 UNTIL
 EndOfStudentFile
 DISPLAY
 StudentId
 SPACE
 StudentName
 SPACE
 CourseCode
 SPACE
 YOBirth
 READ
 StudentFile
 AT
 END
 SET
 EndOfStudentFile
 TO
 TRUE
 END-READ
 END-PERFORM
 CLOSE
 StudentFile
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SeqRead/SeqreadNo88.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 SeqReadNo88
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 StudentFile
 ASSIGN
 TO
 "STUDENTS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 StudentFile
 .
 01
 StudentDetails
 .
 02
 StudentId
 PIC
 9(7)
 .
 02
 StudentName
 .
 03
 Surname
 PIC
 X(8)
 .
 03
 Initials
 PIC
 XX
 .
 02
 DateOfBirth
 .
 03
 YOBirth
 PIC
 9(4)
 .
 03
 MOBirth
 PIC
 9(2)
 .
 03
 DOBirth
 PIC
 9(2)
 .
 02
 CourseCode
 PIC
 X(4)
 .
 02
 Gender
 PIC
 X
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 StudentFile
 READ
 StudentFile
 AT
 END
 MOVE
 HIGH-VALUES
 TO
 StudentDetails
 END-READ
 PERFORM
 UNTIL
 StudentDetails
 =
 HIGH-VALUES
 DISPLAY
 StudentId
 SPACE
 StudentName
 SPACE
 CourseCode
 SPACE
 YOBirth
 READ
 StudentFile
 AT
 END
 MOVE
 HIGH-VALUES
 TO
 StudentDetails
 END-READ
 END-PERFORM
 CLOSE
 StudentFile
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SeqRpt/SeqRpt.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 StudentNumbersReport
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 StudentFile
 ASSIGN
 TO
 "STUDENTS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 ReportFile
 ASSIGN
 TO
 "STUDENTS.RPT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 StudentFile
 .
 01
 StudentDetails
 .
 88
 EndOfStudentFile
 VALUE
 HIGH-VALUES
 .
 02
 StudentId
 PIC
 9(7)
 .
 02
 StudentName
 .
 03
 Surname
 PIC
 X(8)
 .
 03
 Initials
 PIC
 XX
 .
 02
 DateOfBirth
 .
 03
 YOBirth
 PIC
 9(4)
 .
 03
 MOBirth
 PIC
 9(2)
 .
 03
 DOBirth
 PIC
 9(2)
 .
 02
 CourseCode
 PIC
 X(4)
 .
 02
 Gender
 PIC
 X
 .
 88
 Male
 VALUE
 "M"
 "m"
 .
 FD
 ReportFile
 .
 01
 PrintLine
 PIC
 X(40)
 .
 WORKING-STORAGE
 SECTION
 .
 01
 HeadingLine
 PIC
 X(21)
 VALUE
 "  Record Count Report"
 .
 01
 StudentTotalLine
 .
 02
 FILLER
 PIC
 X(17)
 VALUE
 "Total Students = "
 .
 02
 PrnStudentCount
 PIC
 Z,ZZ9
 .
 01
 MaleTotalLine
 .
 02
 FILLER
 PIC
 X(17)
 VALUE
 "Total Males    = "
 .
 02
 PrnMaleCount
 PIC
 Z,ZZ9
 .
 01
 FemaleTotalLine
 .
 02
 FILLER
 PIC
 X(17)
 VALUE
 "Total Females  = "
 .
 02
 PrnFemaleCount
 PIC
 Z,ZZ9
 .
 01
 WorkTotals
 .
 02
 StudentCount
 PIC
 9(4)
 VALUE
 ZERO
 .
 02
 MaleCount
 PIC
 9(4)
 VALUE
 ZERO
 .
 02
 FemaleCount
 PIC
 9(4)
 VALUE
 ZERO
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 StudentFile
 OPEN
 OUTPUT
 ReportFile
 READ
 StudentFile
 AT
 END
 SET
 EndOfStudentFile
 TO
 TRUE
 END-READ
 PERFORM
 UNTIL
 EndOfStudentFile
 ADD
 1
 TO
 StudentCount
 IF
 Male
 ADD
 1
 TO
 MaleCount
 ELSE
 ADD
 1
 TO
 FemaleCount
 END-IF
 READ
 StudentFile
 AT
 END
 SET
 EndOfStudentFile
 TO
 TRUE
 END-READ
 END-PERFORM
 PERFORM
 PrintReportLines
 CLOSE
 StudentFile
 ReportFile
 STOP
 RUN
 .
 PrintReportLines
 .
 MOVE
 StudentCount
 TO
 PrnStudentCount
 MOVE
 MaleCount
 TO
 PrnMaleCount
 MOVE
 FemaleCount
 TO
 PrnFemaleCount
 WRITE
 PrintLine
 FROM
 HeadingLine
 AFTER
 ADVANCING
 PAGE
 WRITE
 PrintLine
 FROM
 StudentTotalLine
 AFTER
 ADVANCING
 2
 LINES
 WRITE
 PrintLine
 FROM
 MaleTotalLine
 AFTER
 ADVANCING
 2
 LINES
 WRITE
 PrintLine
 FROM
 FemaleTotalLine
 AFTER
 ADVANCING
 2
 LINES
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SeqWrite/SEQWRITE.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 SeqWrite
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 StudentFile
 ASSIGN
 TO
 "STUDENTS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 StudentFile
 .
 01
 StudentDetails
 .
 02
 StudentId
 PIC
 9(7)
 .
 02
 StudentName
 .
 03
 Surname
 PIC
 X(8)
 .
 03
 Initials
 PIC
 XX
 .
 02
 DateOfBirth
 .
 03
 YOBirth
 PIC
 9(4)
 .
 03
 MOBirth
 PIC
 9(2)
 .
 03
 DOBirth
 PIC
 9(2)
 .
 02
 CourseCode
 PIC
 X(4)
 .
 02
 Gender
 PIC
 X
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 OUTPUT
 StudentFile
 DISPLAY
 "Enter student details using template below.  Enter no data to end."
 PERFORM
 GetStudentDetails
 PERFORM
 UNTIL
 StudentDetails
 =
 SPACES
 WRITE
 StudentDetails
 PERFORM
 GetStudentDetails
 END-PERFORM
 CLOSE
 StudentFile
 STOP
 RUN
 .
 GetStudentDetails
 .
 DISPLAY
 "Enter - StudId, Surname, Initials, YOB, MOB, DOB, Course, Gender"
 DISPLAY
 "NNNNNNNSSSSSSSSIIYYYYMMDDCCCCG"
 ACCEPT
 StudentDetails
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Sort/InputSORT.CBL':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 InputSort
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 StudentFile
 ASSIGN
 TO
 "SORTSTUD.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 WorkFile
 ASSIGN
 TO
 "WORK.TMP"
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 StudentFile
 .
 01
 StudentDetails
 PIC
 X(30)
 .
 SD
 WorkFile
 .
 01
 WorkRec
 .
 02
 WStudentId
 PIC
 9(7)
 .
 02
 FILLER
 PIC
 X(23)
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 SORT
 WorkFile
 ON
 ASCENDING
 KEY
 WStudentId
 INPUT
 PROCEDURE
 IS
 GetStudentDetails
 GIVING
 StudentFile
 .
 STOP
 RUN
 .
 GetStudentDetails
 .
 DISPLAY
 "Enter student details using template below."
 DISPLAY
 "Enter no data to end."
 .
 DISPLAY
 "Enter - StudId, Surname, Initials, YOB, MOB, DOB, Course, Gender"
 DISPLAY
 "NNNNNNNSSSSSSSSIIYYYYMMDDCCCCG"
 ACCEPT
 WorkRec
 .
 PERFORM
 UNTIL
 WorkRec
 =
 SPACES
 RELEASE
 WorkRec
 ACCEPT
 WorkRec
 END-PERFORM
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Sort/MaleSORT.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MaleSort
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 StudentFile
 ASSIGN
 TO
 "STUDENTS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 MaleStudentFile
 ASSIGN
 TO
 "MALESTUDS.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 SELECT
 WorkFile
 ASSIGN
 TO
 "WORK.TMP"
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 StudentFile
 .
 01
 StudentRec
 PIC
 X(30)
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 FD
 MaleStudentFile
 .
 01
 MaleStudentRec
 PIC
 X(30)
 .
 SD
 WorkFile
 .
 01
 WorkRec
 .
 02
 FILLER
 PIC
 9(7)
 .
 02
 WStudentName
 PIC
 X(10)
 .
 02
 FILLER
 PIC
 X(12)
 .
 02
 WGender
 PIC
 X
 .
 88
 MaleStudent
 VALUE
 "M"
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 SORT
 WorkFile
 ON
 ASCENDING
 KEY
 WStudentName
 INPUT
 PROCEDURE
 IS
 GetMaleStudents
 GIVING
 MaleStudentFile
 .
 STOP
 RUN
 .
 GetMaleStudents
 .
 OPEN
 INPUT
 StudentFile
 READ
 StudentFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 PERFORM
 UNTIL
 EndOfFile
 MOVE
 StudentRec
 TO
 WorkRec
 IF
 MaleStudent
 RELEASE
 WorkRec
 END-IF
 READ
 StudentFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 END-PERFORM
 CLOSE
 StudentFile
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Strings/RefMod.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 RefModification
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 xStr
 PIC
 X(50)
 VALUE
 "   This is the first source string"
 .
 01
 xStr2
 PIC
 X(32)
 VALUE
 "This is the second source string"
 .
 01
 StrSize
 PIC
 99
 VALUE
 32
 .
 01
 CharCount
 PIC
 99
 VALUE
 ZEROS
 .
 01
 EndCount
 PIC
 99
 VALUE
 ZEROS
 .
 01
 yStr
 PIC
 X(4)
 VALUE
 SPACES
 .
 01
 CharPos
 PIC
 99
 VALUE
 ZEROS
 .
 01
 StrLength
 PIC
 99
 VALUE
 ZEROS
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 DISPLAY
 "Task1 = "
 xStr(9:3)
 DISPLAY
 "Task2 = "
 xStr(1:7)
 MOVE
 13
 TO
 StrLength
 DISPLAY
 "Task3 = "
 xStr2((StrSize
 -
 StrLength)
 +
 1:StrLength)
 DISPLAY
 "Task4 Before = "
 xStr
 "<<<<<<"
 MOVE
 0
 TO
 CharCount
 INSPECT
 FUNCTION
 REVERSE(xStr)
 TALLYING
 CharCount
 FOR
 LEADING
 SPACES
 DISPLAY
 "Task4 After = "
 xStr(1:50
 -
 CharCount)
 "<<<<<<<"
 .
 PERFORM
 VARYING
 CharCount
 FROM
 50
 BY
 -1
 UNTIL
 xStr(CharCount:1)
 NOT
 =
 SPACE
 END-PERFORM
 DISPLAY
 "Task4 After = "
 xStr(1:CharCount)
 "<<<<<<<"
 .
 MOVE
 1
 TO
 CharCount
 .
 INSPECT
 xStr
 TALLYING
 CharCount
 FOR
 LEADING
 SPACES
 DISPLAY
 "Task5 ="
 xStr(CharCount:
 50
 -
 CharCount)
 MOVE
 1
 TO
 CharCount
 INSPECT
 xStr
 TALLYING
 CharCount
 for
 CHARACTERS
 BEFORE
 INITIAL
 "source"
 .
 DISPLAY
 "Task6 First occurrence is in char position "
 CharCount
 MOVE
 "fred"
 TO
 yStr
 MOVE
 51
 TO
 EndCount
 PERFORM
 VARYING
 CharPos
 FROM
 1
 BY
 1
 UNTIL
 CharPos
 >
 4
 MOVE
 1
 TO
 CharCount
 INSPECT
 xStr
 TALLYING
 CharCount
 FOR
 CHARACTERS
 BEFORE
 INITIAL
 yStr(CharPos:1)
 IF
 CharCount
 <
 EndCount
 MOVE
 CharCount
 TO
 EndCount
 END-IF
 END-PERFORM
 DISPLAY
 "Task7 First occurrence is in char position "
 EndCount
 DISPLAY
 "The character is "
 xStr(EndCount:1)
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/Strings/UnstringFileEg.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 UnstringFileEg
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 VarLengthRecFile
 ASSIGN
 TO
 "VarLen.DAT"
 ORGANIZATION
 IS
 LINE
 SEQUENTIAL
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 VarLengthRecFile
 .
 01
 VarLenRec
 .
 88
 EndOfFile
 VALUE
 HIGH-VALUES
 .
 02
 TypeCode
 PIC
 XX
 .
 88
 DeleteSupplier
 VALUE
 "1,"
 .
 88
 DeleteVideo
 VALUE
 "2,"
 .
 88
 InsertVideo
 VALUE
 "3,"
 .
 88
 InsertSupplier
 VALUE
 "4,"
 .
 88
 ValidTypeCode
 VALUE
 "1,"
 "2,"
 "3,"
 "4,"
 .
 02
 RemainingRec
 PIC
 X(78)
 .
 WORKING-STORAGE
 SECTION
 .
 01
 InsertSupplierRec
 .
 02
 TransType
 PIC
 9
 .
 02
 TransDate
 PIC
 X(8)
 .
 02
 Supplier-Code
 PIC
 XX
 .
 02
 Supplier-Name
 PIC
 X(20)
 .
 02
 Supplier-Address
 PIC
 X(50)
 .
 01
 InsertSupplierCounts
 .
 02
 DateCount
 PIC
 99
 .
 88
 ValidDate
 VALUE
 8
 .
 02
 SuppCodeCount
 PIC
 99
 .
 88
 ValidSuppCode
 VALUE
 1
 THRU
 2
 .
 02
 SuppNameCount
 PIC
 99
 .
 88
 ValidSuppName
 VALUE
 1
 THRU
 20
 .
 02
 SuppAdrCount
 PIC
 99
 .
 88
 ValidSuppAdr
 VALUE
 1
 THRU
 50
 .
 01
 StringEnd
 PIC
 99
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 OPEN
 INPUT
 VarLengthRecFile
 READ
 VarLengthRecFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 PERFORM
 UNTIL
 EndOfFile
 MOVE
 ZEROS
 TO
 InsertSupplierCounts
 PERFORM
 VARYING
 StringEnd
 FROM
 78
 BY
 -1
 UNTIL
 RemainingRec(StringEnd:1)
 NOT
 =
 SPACE
 END-PERFORM
 IF
 InsertSupplier
 UNSTRING
 RemainingRec(1:StringEnd)
 DELIMITED
 BY
 ","
 INTO
 TransDate
 COUNT
 IN
 DateCount
 Supplier-Code
 COUNT
 IN
 SuppCodeCount
 Supplier-Name
 COUNT
 IN
 SuppNameCount
 Supplier-Address
 COUNT
 IN
 SuppAdrCount
 END-UNSTRING
 PERFORM
 CheckForErrors
 ELSE
 IF
 NOT
 ValidTypeCode
 DISPLAY
 SPACE
 DISPLAY
 "Record = "
 VarLenRec(1:70)
 DISPLAY
 "Type code is not valid"
 END-IF
 END-IF
 READ
 VarLengthRecFile
 AT
 END
 SET
 EndOfFile
 TO
 TRUE
 END-READ
 END-PERFORM
 CLOSE
 VarLengthRecFile
 STOP
 RUN
 .
 CheckForErrors
 .
 DISPLAY
 SPACE
 DISPLAY
 "Record = "
 VarLenRec(1:70)
 IF
 NOT
 ValidDate
 DISPLAY
 "Date Size Error"
 END-IF
 IF
 NOT
 ValidSuppCode
 DISPLAY
 "Supplier Code Error"
 END-IF
 IF
 NOT
 ValidSuppName
 DISPLAY
 "Supplier name Error"
 END-IF
 IF
 NOT
 ValidSuppAdr
 DISPLAY
 "Supplier address Error"
 END-IF
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SubProg/DateValid/DateDriver.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 DateDriver
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 FILLER
 PIC
 9
 VALUE
 0
 .
 88
 EndOfInput
 VALUE
 1
 .
 01
 InputDateIn
 PIC
 9(8)
 .
 01
 ValidationResult
 PIC
 9
 .
 88
 DateIsValid
 VALUE
 0
 .
 88
 DateNotNumeric
 VALUE
 1
 .
 88
 YearContainsZeros
 VALUE
 2
 .
 88
 MonthContainsZeros
 VALUE
 3
 .
 88
 DayContainsZeros
 VALUE
 4
 .
 88
 MonthGreaterThan12
 VALUE
 5
 .
 88
 DayTooGreatForMonth
 VALUE
 6
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 DISPLAY
 "Input Date as DDMMYYYY > "
 WITH
 NO
 ADVANCING
 ACCEPT
 InputDateIn
 CALL
 "Validate"
 USING
 InputDateIn
 ValidationResult
 .
 DISPLAY
 "RESULT = "
 ValidationResult
 DISPLAY
 "DATE IS NOW = "
 InputDateIn
 EVALUATE
 TRUE
 WHEN
 DateIsValid
 DISPLAY
 "Date is valid."
 WHEN
 DateNotNumeric
 DISPLAY
 "Date is not numeric."
 WHEN
 YearContainsZeros
 DISPLAY
 "Year contains all zeros."
 WHEN
 MonthContainsZeros
 DISPLAY
 "Month contains all zeros."
 WHEN
 DayContainsZeros
 DISPLAY
 "Day contains all zeros."
 WHEN
 MonthGreaterThan12
 DISPLAY
 "Month too great."
 WHEN
 DayTooGreatForMonth
 DISPLAY
 "Day too great for month."
 END-EVALUATE
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SubProg/DateValid/ValiDate.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 Validate
 IS
 INITIAL
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 MonthDayTable
 .
 02
 TableValues
 PIC
 X(24)
 VALUE
 "312831303130313130313031"
 .
 02
 FILLER
 REDEFINES
 TableValues
 .
 03
 DaysInMonth
 OCCURS
 12
 TIMES
 PIC
 99
 .
 01
 CurruptDate
 PIC
 9(8)
 .
 01
 LeapQuot
 PIC
 9(4)
 .
 01
 LeapRemain
 PIC
 9(4)
 .
 01
 FILLER
 PIC
 9
 VALUE
 ZERO
 .
 88
 LeapYear
 VALUE
 1
 .
 LINKAGE
 SECTION
 .
 01
 InputDateLA
 .
 02
 DayLA
 PIC
 99
 .
 02
 MonthLA
 PIC
 99
 .
 88
 MonthInvalid
 VALUE
 13
 THRU
 99
 .
 88
 MonthIsFebruary
 VALUE
 2
 .
 02
 YearLA
 PIC
 9(4)
 .
 01
 ValidationResultLB
 PIC
 9
 .
 88
 DateIsValid
 VALUE
 0
 .
 88
 DateNotNumeric
 VALUE
 1
 .
 88
 YearContainsZeros
 VALUE
 2
 .
 88
 MonthContainsZeros
 VALUE
 3
 .
 88
 DayContainsZeros
 VALUE
 4
 .
 88
 MonthGreaterThan12
 VALUE
 5
 .
 88
 DayTooGreatForMonth
 VALUE
 6
 .
 PROCEDURE
 DIVISION
 USING
 InputDateLA
 ValidationResultLB
 .
 Begin
 .
 EVALUATE
 TRUE
 WHEN
 InputDateLA
 NOT
 NUMERIC
 SET
 DateNotNumeric
 TO
 TRUE
 WHEN
 YearLA
 EQUAL
 TO
 ZEROS
 SET
 YearContainsZeros
 TO
 TRUE
 WHEN
 MonthLA
 EQUAL
 TO
 ZEROS
 SET
 MonthContainsZeros
 TO
 TRUE
 WHEN
 DayLA
 EQUAL
 TO
 ZEROS
 SET
 DayContainsZeros
 TO
 TRUE
 WHEN
 MonthInvalid
 SET
 MonthGreaterThan12
 TO
 TRUE
 WHEN
 OTHER
 PERFORM
 CheckForValidDay
 END-EVALUATE
 EXIT
 PROGRAM
 .
 CheckForValidDay
 .
 DIVIDE
 YearLA
 BY
 400
 GIVING
 LeapQuot
 REMAINDER
 LeapRemain
 .
 IF
 LeapRemain
 =
 0
 SET
 LeapYear
 TO
 TRUE
 ELSE
 DIVIDE
 YearLA
 BY
 100
 GIVING
 LeapQuot
 REMAINDER
 LeapRemain
 IF
 LeapRemain
 NOT
 =
 0
 DIVIDE
 YearLA
 BY
 4
 GIVING
 LeapQuot
 REMAINDER
 LeapRemain
 IF
 LeapRemain
 =
 0
 SET
 LeapYear
 TO
 TRUE
 END-IF
 END-IF
 END-IF
 IF
 LeapYear
 AND
 MonthIsFebruary
 MOVE
 29
 TO
 DaysInMonth(2)
 END-IF
 IF
 DayLA
 GREATER
 THAN
 DaysInMonth(MonthLA)
 SET
 DayTooGreatForMonth
 TO
 TRUE
 ELSE
 SET
 DateIsValid
 TO
 TRUE
 END-IF
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SubProg/DayDiff/DayDiffDriver.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 DayDiffDriver
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 Dates
 .
 02
 FirstDate
 PIC
 X(8)
 .
 02
 SecondDate
 PIC
 X(8)
 .
 02
 FirstDatePrn
 PIC
 XX/XX/XXXX
 .
 02
 SecondDatePrn
 PIC
 XX/XX/XXXX
 .
 01
 DayDiffs
 .
 02
 DayDifference
 PIC
 S9(7)
 .
 02
 DayDifferencePrn
 PIC
 ----,--9
 .
 01
 ValidationResult
 PIC
 9
 .
 88
 DateIsValid
 VALUE
 0
 .
 88
 DateIsNotValid
 VALUE
 1
 THRU
 6
 .
 88
 DateNotNumeric
 VALUE
 1
 .
 88
 YearContainsZeros
 VALUE
 2
 .
 88
 MonthContainsZeros
 VALUE
 3
 .
 88
 DayContainsZeros
 VALUE
 4
 .
 88
 MonthGreaterThan12
 VALUE
 5
 .
 88
 DayTooGreatForMonth
 VALUE
 6
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 SET
 DateIsNotValid
 TO
 TRUE
 .
 PERFORM
 GetValidFirstDate
 UNTIL
 DateIsValid
 .
 SET
 DateIsNotValid
 TO
 TRUE
 .
 PERFORM
 GetValidSecondDate
 UNTIL
 DateIsValid
 .
 CALL
 "EuroDateToSortDate"
 USING
 FirstDate
 FirstDate
 .
 CALL
 "EuroDateToSortDate"
 USING
 SecondDate
 SecondDate
 .
 CALL
 "GetDayDiff"
 USING
 BY
 CONTENT
 FirstDate
 SecondDate
 BY
 REFERENCE
 DayDifference
 .
 CALL
 "SortDateToEuroDate"
 USING
 FirstDate
 FirstDate
 .
 CALL
 "SortDateToEuroDate"
 USING
 SecondDate
 SecondDate
 .
 MOVE
 DayDifference
 TO
 DayDifferencePrn
 .
 MOVE
 FirstDate
 TO
 FirstDatePrn
 .
 MOVE
 SecondDate
 TO
 SecondDatePrn
 .
 DISPLAY
 SPACES
 .
 DISPLAY
 "The difference between "
 FirstDatePrn
 " and "
 SecondDatePrn
 " is "
 DayDifferencePrn
 " days."
 .
 STOP
 RUN
 .
 GetValidFirstDate
 .
 DISPLAY
 SPACES
 DISPLAY
 "Enter the first  date in DDMMYYYY format "
 WITH
 NO
 ADVANCING
 .
 ACCEPT
 FirstDate
 .
 CALL
 "Validate"
 USING
 BY
 CONTENT
 FirstDate
 BY
 REFERENCE
 ValidationResult
 .
 IF
 DateIsNotValid
 PERFORM
 DisplayErrorMessage
 END-IF
 .
 GetValidSecondDate
 .
 DISPLAY
 SPACES
 DISPLAY
 "Enter the second date in DDMMYYYY format "
 WITH
 NO
 ADVANCING
 .
 ACCEPT
 SecondDate
 .
 CALL
 "Validate"
 USING
 BY
 CONTENT
 SecondDate
 BY
 REFERENCE
 ValidationResult
 .
 IF
 DateIsNotValid
 PERFORM
 DisplayErrorMessage
 END-IF
 .
 DisplayErrorMessage
 .
 DISPLAY
 "Invalid date . Return code  = "
 ValidationResult
 EVALUATE
 TRUE
 WHEN
 DateNotNumeric
 DISPLAY
 "Date is not numeric."
 WHEN
 YearContainsZeros
 DISPLAY
 "Year contains all zeros."
 WHEN
 MonthContainsZeros
 DISPLAY
 "Month contains all zeros."
 WHEN
 DayContainsZeros
 DISPLAY
 "Day contains all zeros."
 WHEN
 MonthGreaterThan12
 DISPLAY
 "Month to great."
 WHEN
 DayTooGreatForMonth
 DISPLAY
 "Day to great for month."
 END-EVALUATE
 .
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 EuroDateToSortDate
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 YYYYDDMMTemp
 .
 02
 YYYYYear
 PIC
 XXXX
 .
 02
 YYYYMonth
 PIC
 XX
 .
 02
 YYYYDay
 PIC
 XX
 .
 LINKAGE
 SECTION
 .
 01
 DDMMYYYYDate
 .
 02
 DDMMDay
 PIC
 XX
 .
 02
 DDMMMonth
 PIC
 XX
 .
 02
 DDMMYear
 PIC
 XXXX
 .
 01
 YYYYDDMMDate
 PIC
 X(8)
 .
 PROCEDURE
 DIVISION
 USING
 DDMMYYYYDate
 YYYYDDMMDate
 .
 Begin
 .
 MOVE
 DDMMDay
 TO
 YYYYDay
 .
 MOVE
 DDMMMonth
 TO
 YYYYMonth
 .
 MOVE
 DDMMYear
 TO
 YYYYYear
 .
 MOVE
 YYYYDDMMTEMP
 TO
 YYYYDDMMDate
 .
 EXIT
 PROGRAM
 .
 END
 PROGRAM
 EuroDateToSortDate
 .
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 SortDateToEuroDate
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 DDMMYYYYTemp
 .
 02
 DDMMDay
 PIC
 XX
 .
 02
 DDMMMonth
 PIC
 XX
 .
 02
 DDMMYear
 PIC
 XXXX
 .
 LINKAGE
 SECTION
 .
 01
 YYYYDDMMDate
 .
 02
 YYYYYear
 PIC
 XXXX
 .
 02
 YYYYMonth
 PIC
 XX
 .
 02
 YYYYDay
 PIC
 XX
 .
 01
 DDMMYYYYDate
 PIC
 X(8)
 .
 PROCEDURE
 DIVISION
 USING
 YYYYDDMMDate
 DDMMYYYYDate
 .
 Begin
 .
 MOVE
 YYYYDay
 TO
 DDMMDay
 .
 MOVE
 YYYYMonth
 TO
 DDMMMonth
 .
 MOVE
 YYYYYear
 TO
 DDMMYear
 .
 MOVE
 DDMMYYYYTEMP
 TO
 DDMMYYYYDate
 .
 EXIT
 PROGRAM
 .
 END
 PROGRAM
 SortDateToEuroDate
 .
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 GetDayDiff
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 DATA
 DIVISION
 .
 LINKAGE
 SECTION
 .
 01
 Date1
 PIC
 9(8)
 .
 01
 Date2
 PIC
 9(8)
 .
 01
 Difference
 PIC
 S9(7)
 .
 PROCEDURE
 DIVISION
 USING
 Date1
 Date2
 Difference
 .
 Begin
 .
 COMPUTE
 Difference
 =
 FUNCTION
 INTEGER-OF-DATE(Date2)-
 FUNCTION
 INTEGER-OF-DATE(Date1)
 EXIT
 PROGRAM
 .
 END
 PROGRAM
 GetDayDiff
 .
 END
 PROGRAM
 DayDriver
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SubProg/Multiply/DriverProg.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 DriverProg
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 UserNumber
 PIC
 99
 .
 01
 PrnResult
 PIC
 9(6)
 .
 01
 Parameters
 .
 02
 Number1
 PIC
 9(3)
 .
 02
 Number2
 PIC
 9(3)
 .
 02
 FirstString
 PIC
 X(19)
 VALUE
 "First parameter  = "
 .
 02
 SecondString
 PIC
 X(19)
 VALUE
 "Second parameter = "
 .
 02
 Result
 PIC
 9(6)
 COMP
 .
 PROCEDURE
 DIVISION
 .
 Begin
 .
 PERFORM
 CallMultiplyNums
 .
 PERFORM
 CallFickle
 PERFORM
 CallSteadfast
 PERFORM
 MakeFickleSteadfast
 .
 STOP
 RUN
 .
 CallMultiplyNums
 .
 DISPLAY
 "Input 2 numbers (3 digits each)  to be multiplied"
 DISPLAY
 "First number -  "
 WITH
 NO
 ADVANCING
 ACCEPT
 Number1
 DISPLAY
 "Second number - "
 WITH
 NO
 ADVANCING
 ACCEPT
 Number2
 .
 DISPLAY
 "The first string  is "
 FirstString
 .
 DISPLAY
 "The second string is "
 SecondString
 .
 DISPLAY
 ">>>>>>>>> Calling the sub-program now"
 .
 CALL
 "MultiplyNums"
 USING
 BY
 CONTENT
 Number1
 Number2
 FirstString
 BY
 REFERENCE
 SecondString
 Result
 .
 DISPLAY
 "Back in the main program now <<<<<<<<<<<"
 .
 MOVE
 Result
 to
 PrnResult
 .
 DISPLAY
 Number1
 " multiplied by "
 Number2
 " is = "
 PrnResult
 .
 DISPLAY
 "The first string is  "
 FirstString
 .
 DISPLAY
 "The second string is "
 SecondString
 .
 CallFickle
 .
 DISPLAY
 SPACE
 DISPLAY
 "------------------- Calling Fickle ---------"
 MOVE
 10
 TO
 UserNumber
 CALL
 "Fickle"
 USING
 BY
 CONTENT
 UserNumber
 MOVE
 10
 TO
 UserNumber
 CALL
 "Fickle"
 USING
 BY
 CONTENT
 UserNumber
 MOVE
 10
 TO
 UserNumber
 CALL
 "Fickle"
 USING
 BY
 CONTENT
 UserNumber
 .
 CallSteadFast
 .
 DISPLAY
 SPACE
 DISPLAY
 "------------------- Calling Steadfast ---------"
 MOVE
 10
 TO
 UserNumber
 CALL
 "Steadfast"
 USING
 BY
 CONTENT
 UserNumber
 MOVE
 10
 TO
 UserNumber
 CALL
 "Steadfast"
 USING
 BY
 CONTENT
 UserNumber
 MOVE
 10
 TO
 UserNumber
 CALL
 "Steadfast"
 USING
 BY
 CONTENT
 UserNumber
 .
 MakeFickleSteadfast
 .
 DISPLAY
 SPACE
 DISPLAY
 "----- Making fickle act like Steadfast -------"
 CANCEL
 "Fickle"
 MOVE
 10
 TO
 UserNumber
 CALL
 "Fickle"
 USING
 BY
 CONTENT
 UserNumber
 CANCEL
 "Fickle"
 MOVE
 10
 TO
 UserNumber
 CALL
 "Fickle"
 USING
 BY
 CONTENT
 UserNumber
 CANCEL
 "Fickle"
 MOVE
 10
 TO
 UserNumber
 CALL
 "Fickle"
 USING
 BY
 CONTENT
 UserNumber
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SubProg/Multiply/Fickle.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 Fickle
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 RunningTotal
 PIC
 9(4)
 VALUE
 150
 .
 LINKAGE
 SECTION
 .
 01
 Param1
 PIC
 99
 .
 PROCEDURE
 DIVISION
 USING
 Param1
 .
 Begin
 .
 ADD
 Param1
 TO
 RunningTotal
 .
 DISPLAY
 "The total so far is "
 RunningTotal
 EXIT
 PROGRAM
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SubProg/Multiply/MultiplyNums.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MultiplyNums
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 DATA
 DIVISION
 .
 LINKAGE
 SECTION
 .
 01
 Param1
 PIC
 9(3)
 .
 01
 Param2
 PIC
 9(3)
 .
 01
 Answer
 PIC
 9(6)
 COMP
 .
 01
 StrA
 PIC
 X(20)
 .
 01
 StrB
 PIC
 X(20)
 .
 PROCEDURE
 DIVISION
 USING
 Param1
 Param2
 StrA
 StrB
 Answer
 .
 Begin
 .
 DISPLAY
 ">>>>>>>>>>>>>>>>> In the sub-program"
 DISPLAY
 StrA
 Param1
 DISPLAY
 StrB
 Param2
 MULTIPLY
 Param1
 BY
 Param2
 GIVING
 Answer
 .
 MOVE
 "VALUE OVERWRITTEN"
 TO
 StrA
 MOVE
 "VALUE OVERWRITTEN"
 TO
 StrB
 DISPLAY
 "<<<<<<<<<<<<<< Leaving sub-program now"
 .
 EXIT
 PROGRAM
 .

Done.
Pre-processing `test/testsuite/microfocus/www.csis.ul.ie/SubProg/Multiply/Steadfast.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 Steadfast
 IS
 INITIAL
 .
 AUTHOR
 .
 Michael
 Coughlan
 .
 ENVIRONMENT
 DIVISION
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 RunningTotal
 PIC
 9(4)
 VALUE
 150
 .
 LINKAGE
 SECTION
 .
 01
 Param1
 PIC
 99
 .
 PROCEDURE
 DIVISION
 USING
 Param1
 .
 Begin
 .
 ADD
 Param1
 TO
 RunningTotal
 .
 DISPLAY
 "The total so far is "
 RunningTotal
 EXIT
 PROGRAM
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob1.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MAA
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 YY
 PIC
 99
 .
 01
 YYYY
 .
 05
 Y1
 PIC
 99
 VALUE
 19
 .
 05
 Y2
 PIC
 99
 VALUE
 00
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 ACCEPT
 YY
 .
 MOVE
 YY
 TO
 Y2
 .
 IF
 YY
 <
 03
 MOVE
 20
 TO
 Y1
 .
 DISPLAY
 YYYY
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob10.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MAC
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 .
 05
 AA
 PIC
 X(5)
 OCCURS
 100
 TIMES
 INDEXED
 BY
 I
 D
 .
 01
 B
 PIC
 X(5)
 .
 01
 C
 PIC
 9
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 SET
 I
 TO
 0
 .
 SET
 D
 TO
 1
 .
 00A
 .
 DISPLAY
 "MENU"
 .
 DISPLAY
 "1.INSERT"
 .
 DISPLAY
 "2.RETRIVE"
 .
 DISPLAY
 "3.EXIT"
 .
 ACCEPT
 C
 .
 IF
 C
 =
 1
 PERFORM
 0002
 DISPLAY
 "ITEM INSERTED"
 ELSE
 IF
 C
 =
 2
 GO
 0003
 ELSE
 STOP
 RUN
 .
 GO
 00A
 .
 0002
 .
 IF
 I
 >
 100
 SET
 I
 TO
 1
 DISPLAY
 "QUEUE CIRCULARED"
 .
 DISPLAY
 "ENTER VALUE "
 .
 ACCEPT
 B
 .
 SET
 I
 UP
 BY
 1
 .
 MOVE
 B
 TO
 AA
 (
 I
 )
 .
 0003
 .
 IF
 D
 >
 I
 DISPLAY
 "QUEUE EMPTY"
 GO
 00A
 .
 MOVE
 AA
 (
 D
 )
 TO
 B
 .
 DISPLAY
 "ITEM RECEIVED:"
 B
 .
 SET
 D
 UP
 BY
 1
 .
 IF
 D
 >
 100
 SET
 D
 TO
 1
 .
 GO
 00A
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob11.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MAC
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 .
 05
 AA
 PIC
 X(5)
 OCCURS
 100
 TIMES
 INDEXED
 BY
 I
 .
 01
 B
 PIC
 X(5)
 .
 01
 C
 PIC
 9
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 SET
 I
 TO
 0
 .
 00A
 .
 DISPLAY
 "MENU"
 .
 DISPLAY
 "1.PUSH"
 .
 DISPLAY
 "2.POP"
 .
 DISPLAY
 "3.POP ALL"
 DISPLAY
 "4.EXIT"
 .
 ACCEPT
 C
 .
 IF
 C
 =
 1
 PERFORM
 0002
 DISPLAY
 "ITEM PUSHED"
 ELSE
 IF
 C
 =
 2
 PERFORM
 0003
 ELSE
 IF
 C
 =
 3
 PERFORM
 0003
 UNTIL
 I
 =
 0
 ELSE
 STOP
 RUN
 .
 GO
 00A
 .
 0002
 .
 SET
 I
 UP
 BY
 1
 .
 IF
 I
 >
 100
 DISPLAY
 "STACK FULL"
 .
 DISPLAY
 "ENTER VALUE "
 .
 ACCEPT
 B
 .
 MOVE
 B
 TO
 AA
 (
 I
 )
 .
 0003
 .
 MOVE
 AA
 (
 I
 )
 TO
 B
 .
 DISPLAY
 "ITEM POPPED:"
 B
 .
 SET
 I
 DOWN
 BY
 1
 .
 IF
 I
 =
 0
 OR
 I
 <
 0
 DISPLAY
 "EMPTY STACK"
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob12.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 PRIME
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 .
 05
 AA
 PIC
 99
 OCCURS
 10
 TIMES
 .
 01
 I
 PIC
 99
 VALUE
 1
 .
 01
 N
 PIC
 9(10)
 VALUE
 1
 .
 01
 D
 PIC
 9(10)
 VALUE
 2
 .
 01
 V
 PIC
 9(10)
 VALUE
 1
 .
 01
 T1
 PIC
 99
 .
 01
 T2
 PIC
 99
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 DISPLAY
 "ENTER NO"
 .
 ACCEPT
 N
 .
 DISPLAY
 "PRIME FACTORS ARE: "
 .
 COMPUTE
 V
 =
 N
 /
 2
 .
 PERFORM
 0002
 .
 COMPUTE
 I
 =
 1
 .
 PERFORM
 0003
 UNTIL
 I
 >
 10
 .
 STOP
 RUN
 .
 0002
 .
 DIVIDE
 N
 BY
 D
 GIVING
 T1
 REMAINDER
 T2
 .
 IF
 T2
 =
 0
 COMPUTE
 AA
 (
 I
 )
 =
 D
 ADD
 1
 TO
 I
 COMPUTE
 N
 =
 N
 /
 D
 ELSE
 ADD
 1
 TO
 D
 .
 IF
 D
 <
 N
 OR
 =
 N
 GO
 0002
 .
 0003
 .
 DISPLAY
 AA
 (
 I
 )
 .
 ADD
 1
 TO
 I
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob13.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MAC
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 X
 PIC
 9(4)
 VALUE
 8048
 .
 01
 Y
 PIC
 9(4)
 VALUE
 21
 .
 01
 Z
 PIC
 9(4)
 VALUE
 31
 .
 01
 I
 PIC
 9(5)
 VALUE
 0
 .
 01
 A
 PIC
 9(4)
 .
 01
 B
 PIC
 9(4)
 .
 01
 N
 PIC
 9(2)
 VALUE
 1
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 DISPLAY
 "ENTER LIMIT:"
 .
 ACCEPT
 N
 .
 DISPLAY
 "RANDOM SERIES:"
 .
 PERFORM
 0002
 N
 TIMES
 .
 STOP
 RUN
 .
 0002
 .
 COMPUTE
 A
 =
 Y
 *
 I
 +
 Z
 .
 DIVIDE
 X
 INTO
 A
 GIVING
 B
 REMAINDER
 I
 .
 DISPLAY
 I
 .
 ADD
 1
 TO
 I
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob14.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MACSEQ
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 MAC
 ASSIGN
 TO
 QSAMFILE
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 MAC
 BLOCK
 CONTAINS
 0
 RECORDS
 RECORDING
 MODE
 F
 .
 01
 MREC
 .
 05
 MNO
 PIC
 9(5)
 .
 05
 MNAME
 PIC
 X(10)
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 PIC
 99
 VALUE
 ZERO
 .
 01
 B
 PIC
 9(5)
 VALUE
 ZERO
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 DISPLAY
 "ENTER 1.SEARCH/2.INSERT/3.REWRITE/4.DEL/5.DEL ALL 6.DISP"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 1
 GO
 1SEARCH
 ELSE
 IF
 A
 =
 2
 GO
 2WRITE
 ELSE
 IF
 A
 =
 3
 GO
 3REWRITE
 ELSE
 IF
 A
 =
 4
 GO
 4DELETE
 ELSE
 IF
 A
 =
 5
 GO
 5DELALL
 ELSE
 IF
 A
 =
 6
 GO
 6DISPLAY
 ELSE
 DISPLAY
 "INVALID INPUT"
 GO
 0001
 .
 STOP
 RUN
 .
 1SEARCH
 .
 OPEN
 INPUT
 MAC
 .
 DISPLAY
 "ENTER RECORD NO TO BE SEARCHED"
 .
 ACCEPT
 B
 .
 0002
 .
 READ
 MAC
 AT
 END
 DISPLAY
 B
 "NOT FOUND"
 GO
 000X
 .
 IF
 B
 =
 MNO
 DISPLAY
 "FOUND "
 MNO
 ":"
 DISPLAY
 " AT POS:"
 A
 " FOR NAME: "
 MNAME
 GO
 000X
 .
 ADD
 1
 TO
 A
 .
 GO
 TO
 0002
 .
 2WRITE
 .
 OPEN
 EXTEND
 MAC
 .
 ACCEPT
 MNO
 .
 ACCEPT
 MNAME
 .
 WRITE
 MREC
 .
 GO
 000X
 .
 3REWRITE
 .
 OPEN
 I-O
 MAC
 .
 DISPLAY
 "ENTER RECORD NO TO BE REWRITED"
 .
 ACCEPT
 B
 .
 0003
 .
 READ
 MAC
 AT
 END
 DISPLAY
 "MNO NOT FOUND"
 GO
 000X
 .
 IF
 MNO
 NOT
 =
 B
 GO
 0003
 .
 ACCEPT
 MNO
 .
 ACCEPT
 MNAME
 .
 REWRITE
 MREC
 .
 GO
 000X
 .
 4DELETE
 .
 OPEN
 I-O
 MAC
 .
 DISPLAY
 "ENTER RECORD NO TO BE DELETED"
 .
 ACCEPT
 B
 .
 0004
 .
 READ
 MAC
 AT
 END
 DISPLAY
 "MNO NOT FOUND"
 GO
 000X
 .
 IF
 MNO
 NOT
 =
 B
 GO
 0003
 .
 MOVE
 SPACES
 TO
 MREC
 .
 REWRITE
 MREC
 .
 GO
 000X
 .
 5DELALL
 .
 DISPLAY
 "SEQ FILE!SO ALL RECORDS ARE DELETED"
 .
 DISPLAY
 "ARE YOU SURE(1/0)"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 1
 OPEN
 OUTPUT
 MAC
 DISPLAY
 "RECORDS DELETED"
 GO
 000X
 ELSE
 GO
 000X
 .
 6DISPLAY
 .
 OPEN
 INPUT
 MAC
 .
 0005
 .
 READ
 MAC
 AT
 END
 GO
 000X
 .
 DISPLAY
 MNO
 " "
 MNAME
 .
 GO
 0005
 .
 000X
 .
 CLOSE
 MAC
 .
 DISPLAY
 "CONTINUE?1/0"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 0
 STOP
 RUN
 ELSE
 GO
 0001
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob15.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MACESDS
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 MAC
 ASSIGN
 TO
 AS-ESDSFILE
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 MAC
 .
 01
 MREC
 .
 05
 MNO
 PIC
 9(5)
 .
 05
 MNAME
 PIC
 X(10)
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 PIC
 99
 VALUE
 ZERO
 .
 01
 B
 PIC
 9(5)
 VALUE
 ZERO
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 DISPLAY
 "ENTER 1.SEARCH/2.INSERT/3.REWRITE/4.DEL/5.DEL ALL 6.DISP"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 1
 GO
 1SEARCH
 ELSE
 IF
 A
 =
 2
 GO
 2WRITE
 ELSE
 IF
 A
 =
 3
 GO
 3REWRITE
 ELSE
 IF
 A
 =
 4
 GO
 4DELETE
 ELSE
 IF
 A
 =
 5
 GO
 5DELALL
 ELSE
 IF
 A
 =
 6
 GO
 6DISPLAY
 ELSE
 DISPLAY
 "INVALID INPUT"
 GO
 0001
 .
 STOP
 RUN
 .
 1SEARCH
 .
 OPEN
 INPUT
 MAC
 .
 DISPLAY
 "ENTER RECORD NO TO BE SEARCHED"
 .
 ACCEPT
 B
 .
 0002
 .
 READ
 MAC
 AT
 END
 DISPLAY
 B
 "NOT FOUND"
 GO
 000X
 .
 IF
 B
 =
 MNO
 DISPLAY
 "FOUND "
 MNO
 ":"
 DISPLAY
 " AT POS:"
 A
 " FOR NAME: "
 MNAME
 GO
 000X
 .
 ADD
 1
 TO
 A
 .
 GO
 TO
 0002
 .
 2WRITE
 .
 OPEN
 EXTEND
 MAC
 .
 ACCEPT
 MNO
 .
 ACCEPT
 MNAME
 .
 WRITE
 MREC
 .
 GO
 000X
 .
 3REWRITE
 .
 OPEN
 I-O
 MAC
 .
 DISPLAY
 "ENTER RECORD NO TO BE REWRITED"
 .
 ACCEPT
 B
 .
 0003
 .
 READ
 MAC
 AT
 END
 DISPLAY
 "MNO NOT FOUND"
 GO
 000X
 .
 IF
 MNO
 NOT
 =
 B
 GO
 0003
 .
 ACCEPT
 MNO
 .
 ACCEPT
 MNAME
 .
 REWRITE
 MREC
 .
 GO
 000X
 .
 4DELETE
 .
 OPEN
 I-O
 MAC
 .
 DISPLAY
 "ENTER RECORD NO TO BE DELETED"
 .
 ACCEPT
 B
 .
 0004
 .
 READ
 MAC
 AT
 END
 DISPLAY
 "MNO NOT FOUND"
 GO
 000X
 .
 IF
 MNO
 NOT
 =
 B
 GO
 0003
 .
 MOVE
 SPACES
 TO
 MREC
 .
 REWRITE
 MREC
 .
 GO
 000X
 .
 5DELALL
 .
 DISPLAY
 "SEQ FILE!SO ALL RECORDS ARE DELETED"
 .
 DISPLAY
 "ARE YOU SURE(1/0)"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 1
 OPEN
 OUTPUT
 MAC
 DISPLAY
 "RECORDS DELETED"
 GO
 000X
 ELSE
 GO
 000X
 .
 6DISPLAY
 .
 OPEN
 INPUT
 MAC
 .
 0005
 .
 READ
 MAC
 AT
 END
 GO
 000X
 .
 DISPLAY
 MNO
 " "
 MNAME
 .
 GO
 0005
 .
 000X
 .
 CLOSE
 MAC
 .
 DISPLAY
 "CONTINUE?1/0"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 0
 STOP
 RUN
 ELSE
 GO
 0001
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob16.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MACESDS
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 MACC
 ASSIGN
 TO
 RRDSFILE
 ORGANIZATION
 RELATIVE
 ACCESS
 MODE
 DYNAMIC
 RELATIVE
 KEY
 RK
 FILE
 STATUS
 FS
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 MACC
 .
 01
 MREC
 .
 05
 MNO
 PIC
 9(5)
 .
 05
 MNAME
 PIC
 X(10)
 .
 WORKING-STORAGE
 SECTION
 .
 01
 FS
 PIC
 X(2)
 .
 01
 A
 PIC
 99
 VALUE
 00
 .
 01
 B
 PIC
 9(5)
 VALUE
 ZERO
 .
 01
 IREC
 .
 05
 INO
 PIC
 9(5)
 .
 05
 INAME
 PIC
 X(10)
 .
 01
 RK
 PIC
 9(02)
 VALUE
 01
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 DISPLAY
 "ENTER 1.SEAR/2.WRITE/3.REWR/4.DEL/5.DELALL/6.DISP"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 1
 GO
 1SEARCH
 ELSE
 IF
 A
 =
 2
 GO
 2WRITE
 ELSE
 IF
 A
 =
 3
 GO
 3REWRITE
 ELSE
 IF
 A
 =
 4
 GO
 4DELETE
 ELSE
 IF
 A
 =
 5
 GO
 5DELALL
 ELSE
 IF
 A
 =
 6
 GO
 6DISPLAY
 ELSE
 DISPLAY
 "INVALID INPUT"
 GO
 0001
 .
 STOP
 RUN
 .
 1SEARCH
 .
 OPEN
 INPUT
 MACC
 .
 ACCEPT
 B
 .
 0002
 .
 READ
 MACC
 NEXT
 AT
 END
 DISPLAY
 B
 "NOT FOUND"
 GO
 000X
 .
 IF
 B
 =
 MNO
 DISPLAY
 "FOUND "
 MNO
 ":"
 DISPLAY
 " AT POS:"
 A
 " FOR NAME: "
 MNAME
 GO
 000X
 .
 ADD
 1
 TO
 A
 .
 GO
 TO
 0002
 .
 2WRITE
 .
 OPEN
 I-O
 MACC
 .
 IF
 FS
 =
 00
 PERFORM
 RKKEY
 UNTIL
 FS
 =
 10
 ELSE
 OPEN
 OUTPUT
 MACC
 .
 DISPLAY
 RK
 .
 ACCEPT
 MNO
 .
 ACCEPT
 MNAME
 .
 WRITE
 MREC
 INVALID
 KEY
 DISPLAY
 "DUPLICATE KEY!"
 .
 GO
 000X
 .
 3REWRITE
 .
 OPEN
 I-O
 MACC
 .
 ACCEPT
 RK
 .
 ACCEPT
 MNO
 .
 ACCEPT
 MNAME
 .
 REWRITE
 MREC
 INVALID
 KEY
 DISPLAY
 "NOT FOUND"
 .
 GO
 000X
 .
 4DELETE
 .
 OPEN
 I-O
 MACC
 .
 ACCEPT
 RK
 .
 DELETE
 MACC
 INVALID
 KEY
 DISPLAY
 "NOT FOUND"
 .
 GO
 000X
 .
 5DELALL
 .
 OPEN
 I-O
 MACC
 .
 MOVE
 01
 TO
 RK
 .
 0003
 .
 DELETE
 MACC
 INVALID
 KEY
 GO
 000X
 .
 ADD
 01
 TO
 RK
 .
 GO
 0003
 .
 6DISPLAY
 .
 OPEN
 INPUT
 MACC
 .
 0005
 .
 READ
 MACC
 NEXT
 INTO
 IREC
 AT
 END
 GO
 000X
 .
 DISPLAY
 INO
 " "
 INAME
 .
 GO
 0005
 .
 000X
 .
 CLOSE
 MACC
 .
 DISPLAY
 "CONTINUE?1/0"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 0
 STOP
 RUN
 ELSE
 GO
 0001
 .
 RKKEY
 .
 READ
 MACC
 NEXT
 .
 ADD
 1
 TO
 RK
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob17.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MACESDS
 .
 ENVIRONMENT
 DIVISION
 .
 INPUT-OUTPUT
 SECTION
 .
 FILE-CONTROL
 .
 SELECT
 MACC
 ASSIGN
 TO
 KSDSFILE
 ORGANIZATION
 INDEXED
 ACCESS
 MODE
 DYNAMIC
 RECORD
 KEY
 MNO
 FILE
 STATUS
 FS
 .
 DATA
 DIVISION
 .
 FILE
 SECTION
 .
 FD
 MACC
 .
 01
 MREC
 .
 05
 MNO
 PIC
 9(5)
 .
 05
 MNAME
 PIC
 X(10)
 .
 WORKING-STORAGE
 SECTION
 .
 01
 FS
 PIC
 X(2)
 .
 01
 A
 PIC
 99
 VALUE
 00
 .
 01
 B
 PIC
 9(5)
 VALUE
 ZERO
 .
 01
 IREC
 .
 05
 INO
 PIC
 9(5)
 .
 05
 INAME
 PIC
 X(10)
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 DISPLAY
 "ENTER 1.SEAR/2.WRITE/3.REWR/4.DEL/5.DELALL/6.DISP"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 1
 GO
 1SEARCH
 ELSE
 IF
 A
 =
 2
 GO
 2WRITE
 ELSE
 IF
 A
 =
 3
 GO
 3REWRITE
 ELSE
 IF
 A
 =
 4
 GO
 4DELETE
 ELSE
 IF
 A
 =
 5
 GO
 5DELALL
 ELSE
 IF
 A
 =
 6
 GO
 6DISPLAY
 ELSE
 DISPLAY
 "INVALID INPUT"
 GO
 0001
 .
 STOP
 RUN
 .
 1SEARCH
 .
 OPEN
 INPUT
 MACC
 .
 ACCEPT
 B
 .
 0002
 .
 READ
 MACC
 NEXT
 AT
 END
 DISPLAY
 B
 "NOT FOUND"
 GO
 000X
 .
 IF
 B
 =
 MNO
 DISPLAY
 "FOUND "
 MNO
 ":"
 DISPLAY
 " AT POS:"
 A
 " FOR NAME: "
 MNAME
 GO
 000X
 .
 ADD
 1
 TO
 A
 .
 GO
 TO
 0002
 .
 2WRITE
 .
 OPEN
 I-O
 MACC
 .
 IF
 FS
 =
 95
 DISPLAY
 "TYPE ISAM BEFORE RUN THIS PROGRAM"
 ELSE
 IF
 FS
 NOT
 =
 00
 OPEN
 OUTPUT
 MACC
 .
 ACCEPT
 MNO
 .
 ACCEPT
 MNAME
 .
 WRITE
 MREC
 INVALID
 KEY
 DISPLAY
 "DUPLICATE KEY!"
 .
 GO
 000X
 .
 3REWRITE
 .
 OPEN
 I-O
 MACC
 .
 ACCEPT
 MNO
 .
 ACCEPT
 MNAME
 .
 REWRITE
 MREC
 .
 GO
 000X
 .
 4DELETE
 .
 OPEN
 I-O
 MACC
 .
 ACCEPT
 MNO
 .
 DELETE
 MACC
 INVALID
 KEY
 DISPLAY
 "NOT FOUND"
 .
 GO
 000X
 .
 5DELALL
 .
 OPEN
 I-O
 MACC
 .
 0003
 .
 READ
 MACC
 NEXT
 AT
 END
 DISPLAY
 "RECORDS DELETED"
 GO
 000X
 .
 DELETE
 MACC
 INVALID
 KEY
 GO
 000X
 .
 GO
 0003
 .
 6DISPLAY
 .
 OPEN
 INPUT
 MACC
 .
 0005
 .
 READ
 MACC
 NEXT
 INTO
 IREC
 AT
 END
 GO
 000X
 .
 DISPLAY
 INO
 " "
 INAME
 .
 GO
 0005
 .
 000X
 .
 CLOSE
 MACC
 .
 DISPLAY
 "CONTINUE?1/0"
 .
 ACCEPT
 A
 .
 IF
 A
 =
 0
 STOP
 RUN
 ELSE
 GO
 0001
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob2.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MAA
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 YY
 PIC
 99
 .
 01
 YYYY
 .
 05
 Y1
 PIC
 99
 VALUE
 19
 .
 05
 Y2
 PIC
 99
 VALUE
 00
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 ACCEPT
 YY
 .
 MOVE
 YY
 TO
 Y2
 .
 IF
 YY
 <
 03
 MOVE
 20
 TO
 Y1
 .
 DISPLAY
 YYYY
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob3.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MAC
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 .
 05
 A1
 PIC
 99
 .
 05
 A2
 PIC
 99
 .
 05
 A3
 PIC
 99
 .
 01
 B
 .
 05
 A1
 PIC
 9(4)
 .
 05
 FILLER
 PIC
 X
 VALUE
 '/'
 .
 05
 A2
 PIC
 9(2)
 .
 05
 FILLER
 PIC
 X
 VALUE
 '/'
 .
 05
 A3
 PIC
 9(2)
 .
 PROCEDURE
 DIVISION
 .
 MAAC
 .
 ACCEPT
 A
 FROM
 DATE
 .
 MOVE
 CORR
 A
 TO
 B
 .
 IF
 NOT
 (A1
 OF
 A
 <
 10
 )
 INSPECT
 A1
 OF
 B
 REPLACING
 FIRST
 "00"
 BY
 "19"
 ELSE
 INSPECT
 A1
 OF
 B
 REPLACING
 FIRST
 "00"
 BY
 "20"
 .
 DISPLAY
 "CURRENT DATE IS (ISO) :"
 B
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob4.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 DAYFIND
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 Y
 PIC
 9(4)
 .
 01
 M
 PIC
 9(2)
 .
 01
 D
 PIC
 9(2)
 .
 01
 A
 PIC
 99
 VALUE
 ZERO
 .
 01
 B
 PIC
 9
 VALUE
 ZERO
 .
 01
 C
 PIC
 99
 VALUE
 ZERO
 .
 01
 F
 VALUE
 "12060708091011"
 .
 05
 FF
 PIC
 99
 OCCURS
 7
 .
 01
 E
 PIC
 9999
 VALUE
 0012
 .
 01
 T
 PIC
 9999
 VALUE
 ZERO
 .
 01
 I
 PIC
 9
 VALUE
 1
 .
 PROCEDURE
 DIVISION
 .
 0001A
 .
 DISPLAY
 "ENTER 4 DIGIT YEAR >=0001 & <=9999"
 .
 ACCEPT
 Y
 .
 0002A
 .
 DISPLAY
 "ENTER MONTH(INTEGER)"
 .
 ACCEPT
 M
 .
 IF
 M
 <
 1
 OR
 >
 12
 DISPLAY
 "INVALID MONTH"
 GO
 0002A
 .
 0003A
 .
 DISPLAY
 "ENTER DATE(INTEGER)"
 .
 ACCEPT
 D
 .
 IF
 D
 <
 1
 OR
 >
 31
 DISPLAY
 "INVALID DATE"
 GO
 0003A
 .
 MOVE
 D
 TO
 C
 .
 0000X
 .
 COMPUTE
 A
 =
 FF
 (
 I
 )
 .
 IF
 E
 =
 Y
 GO
 0000Y
 .
 ADD
 1
 TO
 I
 .
 IF
 I
 >
 7
 COMPUTE
 I
 =
 1
 .
 DIVIDE
 E
 BY
 4
 GIVING
 T
 REMAINDER
 B
 .
 IF
 E
 <
 Y
 AND
 B
 =
 0
 ADD
 1
 TO
 I
 .
 IF
 I
 >
 7
 COMPUTE
 I
 =
 1
 .
 ADD
 1
 TO
 E
 .
 GO
 0000X
 .
 0000Y
 .
 IF
 B
 =
 0
 AND
 M
 >
 2
 ADD
 1
 TO
 A
 .
 IF
 M
 =
 1
 ADD
 A
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 2
 ADD
 A
 3
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 3
 ADD
 A
 3
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 4
 SUBTRACT
 1
 FROM
 A
 ADD
 A
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 5
 ADD
 A
 1
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 6
 ADD
 A
 4
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 7
 SUBTRACT
 1
 FROM
 A
 ADD
 A
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 8
 ADD
 A
 2
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 9
 SUBTRACT
 2
 FROM
 A
 ADD
 A
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 10
 ADD
 A
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 11
 ADD
 A
 3
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 IF
 M
 =
 12
 SUBTRACT
 2
 FROM
 A
 ADD
 A
 TO
 D
 DIVIDE
 D
 BY
 7
 GIVING
 A
 REMAINDER
 B
 ELSE
 DISPLAY
 "COBOL FAILED"
 .
 DISPLAY
 Y
 "/"
 M
 "/"
 C
 " IS:"
 .
 IF
 B
 =
 0
 DISPLAY
 "SUNDAY"
 ELSE
 IF
 B
 =
 1
 DISPLAY
 "MONDAY"
 ELSE
 IF
 B
 =
 2
 DISPLAY
 "TUESDAY"
 ELSE
 IF
 B
 =
 3
 DISPLAY
 "WEDNESDAY"
 ELSE
 IF
 B
 =
 4
 DISPLAY
 "THURSDAY"
 ELSE
 IF
 B
 =
 5
 DISPLAY
 "FRIDAY"
 ELSE
 IF
 B
 =
 6
 DISPLAY
 "SATURDAY"
 ELSE
 DISPLAY
 "COBOL RUNTIME ERROR"
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob5.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MACTIME
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 ST
 .
 05
 HH
 PIC
 99
 .
 05
 MM
 PIC
 99
 .
 05
 SS
 PIC
 99
 .
 01
 PS
 PIC
 9
 VALUE
 2
 .
 01
 NG
 PIC
 9
 VALUE
 2
 .
 01
 XCH
 PIC
 99
 VALUE
 01
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 DISPLAY
 "ENTER INDIA STANDARD TIME (HHMMSS /235959)"
 .
 ACCEPT
 ST
 .
 IF
 ST
 =
 SPACE
 ACCEPT
 ST
 FROM
 TIME
 DISPLAY
 "YOUR SYSTEM TIME IS :- "
 HH
 ":"
 MM
 ":"
 SS
 ELSE
 DISPLAY
 "TIME ENTERED BY YOU :- "
 HH
 ":"
 MM
 ":"
 SS
 .
 DISPLAY
 "XCHOOSE THE COUNTRY YOU WANT TO XCHECK THE TIME NOW"
 .
 DISPLAY
 "1.ARABIA            2.AUSTRALIA          3.ALGERIA     4.ALASKA"
 .
 DISPLAY
 "5.BAHRAIN         6.BRASIL                 7.BELGIUM     8.XCHINA"
 .
 DISPLAY
 "9.CANADA          10.CNTAMERIC      11.EGYPT        12.GREESE"
 .
 DISPLAY
 "13.GERMANY    14.HONG KONG      15.IRAQ          16.JAPAN"
 .
 DISPLAY
 "17.KENYA           18.LONDON             19.MEXICO    20.NEZEALND"
 .
 DISPLAY
 "21.PAKISTN        22.RUSSIA                23.SPAIN        24.SOUTHAFRICA"
 .
 DISPLAY
 "25.SRILANK       26.SYDNEY               27.SINGAPRE 28.ZIMBABWE"
 .
 DISPLAY
 " "
 .
 PERFORM
 0003
 5
 TIMES
 .
 DISPLAY
 "ENTER YOUR XCHOICE(2 DIGIT INTEGER)"
 .
 ACCEPT
 XCH
 .
 IF
 XCH
 =
 1
 PERFORM
 0002
 4
 TIMES
 DISPLAY
 "NOW ARABIAN TIME IS"
 ELSE
 IF
 XCH
 =
 2
 PERFORM
 0002
 10
 TIMES
 DISPLAY
 "AUSTRALIA TIME"
 ELSE
 IF
 XCH
 =
 3
 DISPLAY
 "ALGERIAN TIME IS"
 ELSE
 IF
 XCH
 =
 4
 PERFORM
 0003
 9
 TIMES
 DISPLAY
 "ALASKA TIME IS"
 ELSE
 IF
 XCH
 =
 5
 PERFORM
 0002
 3
 TIMES
 DISPLAY
 "BAHRAIN TIME IS"
 ELSE
 IF
 XCH
 =
 6
 PERFORM
 0003
 3
 TIMES
 DISPLAY
 "BRASIL TIME IS"
 ELSE
 IF
 XCH
 =
 7
 DISPLAY
 "BELGIUM TIME IS"
 ELSE
 IF
 XCH
 =
 8
 PERFORM
 0002
 8
 TIMES
 DISPLAY
 "XCHINA TIME IS"
 ELSE
 IF
 XCH
 =
 9
 PERFORM
 0003
 8
 TIMES
 DISPLAY
 "CANADA TIME IS"
 ELSE
 IF
 XCH
 =
 10
 PERFORM
 0003
 6
 TIMES
 DISPLAY
 "CENTRL AMERIC"
 ELSE
 IF
 XCH
 =
 11
 PERFORM
 0002
 2
 TIMES
 DISPLAY
 "EGYPT TIME IS"
 ELSE
 IF
 XCH
 =
 12
 PERFORM
 0002
 2
 TIMES
 DISPLAY
 "GREESE TIME"
 ELSE
 IF
 XCH
 =
 13
 PERFORM
 0002
 1
 TIMES
 DISPLAY
 "GERMANY TIME"
 ELSE
 IF
 XCH
 =
 14
 PERFORM
 0002
 8
 TIMES
 DISPLAY
 "HONKKONG TIME"
 ELSE
 IF
 XCH
 =
 15
 PERFORM
 0002
 3
 TIMES
 DISPLAY
 "IRAQ TIME IS"
 ELSE
 IF
 XCH
 =
 16
 PERFORM
 0002
 9
 TIMES
 DISPLAY
 "JAPAN TIME IS"
 ELSE
 IF
 XCH
 =
 17
 PERFORM
 0002
 3
 TIMES
 DISPLAY
 "KENYA TIME IS"
 ELSE
 IF
 XCH
 =
 18
 DISPLAY
 "LONDON TIME IS"
 ELSE
 IF
 XCH
 =
 19
 PERFORM
 0003
 6
 TIMES
 DISPLAY
 "MEXICO TIME IS"
 ELSE
 IF
 XCH
 =
 20
 PERFORM
 0002
 2
 TIMES
 DISPLAY
 "NEW ZEALAND:"
 ELSE
 IF
 XCH
 =
 21
 PERFORM
 0002
 5
 TIMES
 DISPLAY
 "PAKISTAN TIME"
 ELSE
 IF
 XCH
 =
 22
 PERFORM
 0002
 13
 TIMES
 DISPLAY
 "RUSSIA TIME IS"
 ELSE
 IF
 XCH
 =
 23
 PERFORM
 0002
 1
 TIMES
 DISPLAY
 "SPAIN TIME IS"
 ELSE
 IF
 XCH
 =
 24
 PERFORM
 0002
 1
 TIMES
 DISPLAY
 "SOUTH AFRICA: "
 ELSE
 IF
 XCH
 =
 25
 PERFORM
 0002
 5
 TIMES
 DISPLAY
 "SRILANKA TIME"
 ELSE
 IF
 XCH
 =
 26
 PERFORM
 0002
 10
 TIMES
 DISPLAY
 "SYDNEY TIME IS"
 ELSE
 IF
 XCH
 =
 27
 PERFORM
 0002
 8
 TIMES
 DISPLAY
 "SINGAPORE TIME"
 ELSE
 IF
 XCH
 =
 28
 PERFORM
 0002
 2
 TIMES
 DISPLAY
 "ZIMBABWE TIME"
 ELSE
 DISPLAY
 "INVALID KEY ENTERED"
 GO
 0001
 .
 DISPLAY
 " "
 .
 IF
 PS
 =
 1
 DISPLAY
 "TOMORROW :-"
 ELSE
 IF
 NG
 =
 1
 DISPLAY
 "YESTERDAY :-"
 .
 DISPLAY
 HH
 ":"
 MM
 ":"
 SS
 .
 STOP
 RUN
 .
 0002
 .
 ADD
 1
 TO
 HH
 .
 IF
 HH
 =
 24
 COMPUTE
 HH
 =
 00
 MOVE
 1
 TO
 PS
 .
 0003
 .
 SUBTRACT
 1
 FROM
 HH
 .
 IF
 HH
 =
 00
 COMPUTE
 HH
 =
 24
 MOVE
 1
 TO
 NG
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob6.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MACJUL
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 .
 05
 A1
 PIC
 9999
 .
 05
 A2
 PIC
 99
 .
 05
 A3
 PIC
 99
 .
 01
 B
 .
 05
 B1
 PIC
 9999
 .
 05
 B2
 PIC
 999
 .
 01
 C
 PIC
 9
 VALUE
 2
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 DISPLAY
 "ENTER GREGORIAN DATE (YYYYMMDD):"
 .
 ACCEPT
 A
 .
 IF
 A
 NOT
 NUMERIC
 OR
 A2
 >
 12
 OR
 A3
 >
 31
 DISPLAY
 "INVALID DATE"
 GO
 0001
 .
 MOVE
 A1
 TO
 B1
 .
 COMPUTE
 B2
 =
 A3
 .
 IF
 A2
 =
 12
 ADD
 30
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 11
 ADD
 31
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 10
 ADD
 30
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 9
 ADD
 31
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 8
 ADD
 31
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 7
 ADD
 30
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 6
 ADD
 31
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 5
 ADD
 30
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 4
 ADD
 31
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 .
 IF
 A2
 =
 3
 ADD
 28
 TO
 B2
 SUBTRACT
 1
 FROM
 A2
 DIVIDE
 A1
 BY
 4
 GIVING
 A1
 REMAINDER
 C
 IF
 C
 =
 0
 ADD
 1
 TO
 B2
 .
 IF
 A2
 =
 2
 ADD
 31
 TO
 B2
 .
 DISPLAY
 " "
 .
 DISPLAY
 "JULION DATE IS(YYYYDDD):"
 .
 DISPLAY
 B1
 ":"
 B2
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob7.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 SORTTAB
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 VALUE
 ZEROES
 .
 05
 AA
 PIC
 99
 OCCURS
 1
 TO
 99
 DEPENDING
 N
 .
 01
 N
 PIC
 99
 .
 01
 I
 PIC
 99
 VALUE
 1
 .
 01
 J
 PIC
 99
 .
 01
 K
 PIC
 99
 .
 01
 T
 PIC
 XX
 .
 PROCEDURE
 DIVISION
 .
 001
 .
 DISPLAY
 "ENTER NO OF ELEMENTS IN TABLE:"
 .
 ACCEPT
 N
 .
 DISPLAY
 "ENTER ELEMENTS:"
 .
 PERFORM
 0002
 N
 TIMES
 .
 PERFORM
 0001
 VARYING
 I
 FROM
 1
 BY
 1
 UNTIL
 I
 >
 N
 .
 MOVE
 1
 TO
 I
 .
 DISPLAY
 "THE SORTED TABLE IS:"
 .
 PERFORM
 0003
 N
 TIMES
 .
 STOP
 RUN
 .
 0001
 .
 COMPUTE
 K
 =
 I
 +
 1
 .
 PERFORM
 00001
 VARYING
 J
 FROM
 K
 BY
 1
 UNTIL
 J
 >
 N
 .
 00001
 .
 IF
 AA
 (
 I
 )
 >
 AA
 (
 J
 )
 MOVE
 AA
 (
 I
 )
 TO
 T
 MOVE
 AA
 (
 J
 )
 TO
 AA
 (
 I
 )
 MOVE
 T
 TO
 AA
 (
 J
 )
 .
 0002
 .
 ACCEPT
 AA(I)
 .
 ADD
 1
 TO
 I
 .
 0003
 .
 DISPLAY
 AA(I)
 .
 ADD
 1
 TO
 I
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob8.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 MACSR
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 A
 VALUE
 "123546798012345"
 .
 05
 A1
 OCCURS
 5
 INDEXED
 BY
 I
 .
 10
 A2
 PIC
 9
 OCCURS
 3
 INDEXED
 BY
 J
 .
 01
 K
 PIC
 99
 VALUE
 1
 .
 01
 X
 PIC
 9
 .
 PROCEDURE
 DIVISION
 .
 0001
 .
 SET
 I
 TO
 0
 .
 ACCEPT
 X
 .
 001
 .
 SET
 I
 UP
 BY
 1
 .
 SET
 J
 TO
 1
 .
 002
 .
 SEARCH
 A2
 VARYING
 K
 WHEN
 A2
 (
 I
 J
 )
 =
 X
 DISPLAY
 "FOUND AT:"
 K
 SET
 J
 UP
 BY
 1
 ADD
 1
 TO
 K
 GO
 002
 .
 IF
 I
 <
 5
 GO
 001
 .
 STOP
 RUN
 .

Done.
Pre-processing `test/testsuite/ibm/ibmmainframes.com/cob9.cbl':
 IDENTIFICATION
 DIVISION
 .
 PROGRAM-ID
 .
 TABLEN
 .
 DATA
 DIVISION
 .
 WORKING-STORAGE
 SECTION
 .
 01
 N
 PIC
 99
 VALUE
 0
 .
 01
 E
 .
 05
 EE
 PIC
 99
 OCCURS
 5
 TO
 10
 DEPENDING
 F
 INDEXED
 I
 .
 01
 F
 PIC
 9
 VALUE
 6
 .
 PROCEDURE
 DIVISION
 .
 0001-MC
 .
 COMPUTE
 F
 =
 F
 -
 2
 .
 SET
 I
 TO
 1
 .
 SEARCH
 EE
 VARYING
 N
 WHEN
 1
 =
 2
 NEXT
 SENTENCE
 .
 DISPLAY
 "LENGTH OF TABLE E IS:"
 N
 .
 STOP
 RUN
 .

Done.
